[{"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\index.js":"1","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reportWebVitals.js":"2","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\App.js":"3","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\store.js":"4","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\ContactUsScreen.js":"5","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\HowToPayScreen.js":"6","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\AboutUsScreen.js":"7","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProductScreen.js":"8","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\HomeScreen.js":"9","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Footer.js":"10","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CartScreen.js":"11","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Header.js":"12","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\PaymentScreen.js":"13","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js":"14","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\OrderScreen.js":"15","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\WishlistScreen.js":"16","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\UserListScreen.js":"17","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ShippingScreen.js":"18","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\UserEditScreen.js":"19","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProfileScreen.js":"20","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\OrderListScreen.js":"21","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProductListScreen.js":"22","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProductEditScreen.js":"23","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\ActivateScreen.js":"24","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\LoginScreen.js":"25","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\GoogleScreen.js":"26","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\RegisterScreen.js":"27","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\ResetPasswordConfirmScreen.js":"28","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\FAQScreen.js":"29","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\PrivacyPolicyScreen.js":"30","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\ResetPasswordScreen.js":"31","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\TermsAndConditionsScreen.js":"32","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\productReducers.js":"33","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\cartReducers.js":"34","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\wishlistReducers.js":"35","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\orderReducers.js":"36","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\userReducers.js":"37","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\categoryReducers.js":"38","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CategoryListScreen.js":"39","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CategoricallyProductsScreen.js":"40","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CategoryEditScreen.js":"41","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Message.js":"42","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Loader.js":"43","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Product.js":"44","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\ProductCarousal.js":"45","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\FormContainer.js":"46","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Rating.js":"47","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\SearchBox.js":"48","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\cartActions.js":"49","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\CheckoutSteps.js":"50","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Sidebar.js":"51","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\orderActions.js":"52","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\productActions.js":"53","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\userActions.js":"54","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\userConstants.js":"55","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\productConstants.js":"56","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\wishlistActions.js":"57","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\orderConstants.js":"58","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\wishlistConstants.js":"59","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\cartConstants.js":"60","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\categoryConstants.js":"61","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\categoryActions.js":"62"},{"size":614,"mtime":1635624522877,"results":"63","hashOfConfig":"64"},{"size":376,"mtime":1635624522881,"results":"65","hashOfConfig":"64"},{"size":4516,"mtime":1635624522860,"results":"66","hashOfConfig":"64"},{"size":3638,"mtime":1635624523245,"results":"67","hashOfConfig":"64"},{"size":172,"mtime":1635624522887,"results":"68","hashOfConfig":"64"},{"size":1456,"mtime":1635624523234,"results":"69","hashOfConfig":"64"},{"size":19397,"mtime":1635624522886,"results":"70","hashOfConfig":"64"},{"size":15667,"mtime":1635624523238,"results":"71","hashOfConfig":"64"},{"size":2923,"mtime":1635624523233,"results":"72","hashOfConfig":"64"},{"size":3388,"mtime":1635624522866,"results":"73","hashOfConfig":"64"},{"size":4928,"mtime":1635624523231,"results":"74","hashOfConfig":"64"},{"size":5118,"mtime":1635624522867,"results":"75","hashOfConfig":"64"},{"size":2750,"mtime":1635624523237,"results":"76","hashOfConfig":"64"},{"size":5429,"mtime":1635873108914,"results":"77","hashOfConfig":"64"},{"size":9428,"mtime":1635624523236,"results":"78","hashOfConfig":"64"},{"size":4997,"mtime":1635624523240,"results":"79","hashOfConfig":"64"},{"size":3726,"mtime":1635624523239,"results":"80","hashOfConfig":"64"},{"size":3253,"mtime":1635871461867,"results":"81","hashOfConfig":"64"},{"size":4091,"mtime":1635624523239,"results":"82","hashOfConfig":"64"},{"size":6971,"mtime":1635624523238,"results":"83","hashOfConfig":"64"},{"size":3506,"mtime":1635624523235,"results":"84","hashOfConfig":"64"},{"size":4995,"mtime":1635624523238,"results":"85","hashOfConfig":"64"},{"size":14520,"mtime":1635667766371,"results":"86","hashOfConfig":"64"},{"size":1369,"mtime":1635624522882,"results":"87","hashOfConfig":"64"},{"size":3669,"mtime":1635624522882,"results":"88","hashOfConfig":"64"},{"size":1315,"mtime":1635624522882,"results":"89","hashOfConfig":"64"},{"size":4783,"mtime":1635669075654,"results":"90","hashOfConfig":"64"},{"size":3230,"mtime":1635624522883,"results":"91","hashOfConfig":"64"},{"size":8409,"mtime":1635624522888,"results":"92","hashOfConfig":"64"},{"size":7494,"mtime":1635624522888,"results":"93","hashOfConfig":"64"},{"size":2255,"mtime":1635624522884,"results":"94","hashOfConfig":"64"},{"size":10262,"mtime":1635624522888,"results":"95","hashOfConfig":"64"},{"size":4193,"mtime":1635624522879,"results":"96","hashOfConfig":"64"},{"size":1599,"mtime":1635624522878,"results":"97","hashOfConfig":"64"},{"size":1261,"mtime":1635624522881,"results":"98","hashOfConfig":"64"},{"size":4427,"mtime":1635624522879,"results":"99","hashOfConfig":"64"},{"size":6348,"mtime":1635624522880,"results":"100","hashOfConfig":"64"},{"size":3582,"mtime":1635624522878,"results":"101","hashOfConfig":"64"},{"size":4247,"mtime":1635624523233,"results":"102","hashOfConfig":"64"},{"size":2161,"mtime":1635624523232,"results":"103","hashOfConfig":"64"},{"size":2256,"mtime":1635624523232,"results":"104","hashOfConfig":"64"},{"size":240,"mtime":1635624522868,"results":"105","hashOfConfig":"64"},{"size":479,"mtime":1635624522868,"results":"106","hashOfConfig":"64"},{"size":1048,"mtime":1635624522868,"results":"107","hashOfConfig":"64"},{"size":1858,"mtime":1635624522872,"results":"108","hashOfConfig":"64"},{"size":394,"mtime":1635624522866,"results":"109","hashOfConfig":"64"},{"size":1957,"mtime":1635624522872,"results":"110","hashOfConfig":"64"},{"size":2524,"mtime":1635624522873,"results":"111","hashOfConfig":"64"},{"size":1409,"mtime":1635624522861,"results":"112","hashOfConfig":"64"},{"size":1645,"mtime":1635624522865,"results":"113","hashOfConfig":"64"},{"size":1669,"mtime":1635624522874,"results":"114","hashOfConfig":"64"},{"size":6200,"mtime":1635624522862,"results":"115","hashOfConfig":"64"},{"size":6194,"mtime":1635624522862,"results":"116","hashOfConfig":"64"},{"size":12505,"mtime":1635669725575,"results":"117","hashOfConfig":"64"},{"size":2360,"mtime":1635624522875,"results":"118","hashOfConfig":"64"},{"size":1534,"mtime":1635624522875,"results":"119","hashOfConfig":"64"},{"size":913,"mtime":1635624522863,"results":"120","hashOfConfig":"64"},{"size":1274,"mtime":1635624522875,"results":"121","hashOfConfig":"64"},{"size":178,"mtime":1635624522876,"results":"122","hashOfConfig":"64"},{"size":296,"mtime":1635624522874,"results":"123","hashOfConfig":"64"},{"size":1334,"mtime":1635624522874,"results":"124","hashOfConfig":"64"},{"size":5568,"mtime":1635624522861,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14ti2cl",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\index.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reportWebVitals.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\App.js",["276"],"import Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport WishlistScreen from './screens/WishlistScreen'\r\n\r\nimport OrderScreen from './screens/OrderScreen'\r\n\r\nimport LoginScreen from './screens/AccountScreens/LoginScreen'\r\nimport RegisterScreen from './screens/AccountScreens/RegisterScreen'\r\nimport ActivateScreen from './screens/AccountScreens/ActivateScreen';\r\n\r\nimport GoogleScreen from './screens/AccountScreens/GoogleScreen';\r\n\r\nimport ResetPasswordScreen from './screens/AccountScreens/ResetPasswordScreen';\r\nimport ResetPasswordConfirmScreen from './screens/AccountScreens/ResetPasswordConfirmScreen';\r\n\r\n\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\n\r\n\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\n\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\n\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\n\r\nimport CategoricallyProductsScreen from \"./screens/CategoricallyProductsScreen\";\r\nimport CategoryListScreen from './screens/CategoryListScreen';\r\nimport CategoryEditScreen from './screens/CategoryEditScreen';\r\nimport HowToPayScreen from './screens/HowToPayScreen.js';\r\n\r\nimport ContactUsScreen from './screens/BlogScreens/ContactUsScreen.js';\r\nimport AboutUsScreen from './screens/BlogScreens/AboutUsScreen.js';\r\nimport FAQScreen from './screens/BlogScreens/FAQScreen'\r\nimport PrivacyPolicyScreen from './screens/BlogScreens/PrivacyPolicyScreen'\r\nimport TermsAndConditionsScreen from './screens/BlogScreens/TermsAndConditionsScreen'\r\n\r\n// import Google from './containers/Google';\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Route, useLocation } from 'react-router-dom'\r\n// import sidebar from ''\r\nimport './scss/style.scss'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Header />\r\n\r\n      <Route path='/about-us' component={AboutUsScreen} />\r\n      <Route path='/contact-us' component={ContactUsScreen} />\r\n      <Route path='/faqs' component={FAQScreen} />\r\n      <Route path='/privacy-policy' component={PrivacyPolicyScreen} />\r\n      <Route path='/terms-and-conditions' component={TermsAndConditionsScreen} />\r\n\r\n\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n          <Route exact path='/google' component={GoogleScreen} />\r\n\r\n          <Route path=\"/category/:id\" component={CategoricallyProductsScreen} exact />\r\n\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/activate/:id/:token' component={ActivateScreen} />\r\n\r\n\r\n          <Route path='/reset-password' component={ResetPasswordScreen} />\r\n          <Route path='/password/reset/confirm/:id/:token' component={ResetPasswordConfirmScreen} />\r\n\r\n\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/how-to-pay' component={HowToPayScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n\r\n          <Route path=\"/admin/categorylist\" component={CategoryListScreen} />\r\n          <Route path=\"/admin/categorylist/:id/edit\" component={CategoryEditScreen} />\r\n\r\n\r\n\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n\r\n\r\n          <Route path='/wishlist/:id?' component={WishlistScreen} />\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\store.js",["277"],"import {\r\n    createStore,\r\n    combineReducers,\r\n    applyMiddleware\r\n} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n\r\n\r\n\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { wishlistReducer } from './reducers/wishlistReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userActivateReducer,\r\n    googleAuthenticateReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n    userPasswordResetReducer,\r\n    userPasswordResetConfirmReducer,\r\n\r\n\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n\r\n} from './reducers/orderReducers'\r\nimport {\r\n    productCategoryReducer,\r\n    productCategoryListReducer,\r\n    categoryDeleteReducer,\r\n    categoryIncludeReducer,\r\n    categoryCreateReducer,\r\n    categoryEditReducer,\r\n\r\n} from './reducers/categoryReducers'\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    productCategory: productCategoryReducer,\r\n    productCategoryList: productCategoryListReducer,\r\n\r\n    categoryCreate: categoryCreateReducer,\r\n    categoryDelete: categoryDeleteReducer,\r\n    categoryInclude: categoryIncludeReducer,\r\n    categoryEdit: categoryEditReducer,\r\n\r\n    wishlist: wishlistReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userActivate:userActivateReducer,\r\n\r\n    googleAuthenticate:googleAuthenticateReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userPasswordReset:userPasswordResetReducer,\r\n    userPasswordResetConfirm:userPasswordResetConfirmReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst wishlistItemsFromStorage = localStorage.getItem(\"wishlistItems\") ?\r\n    JSON.parse(localStorage.getItem('wishlistItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n    // wishlist: {  wishlistItemsFromStorage },\r\n\r\n}\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\n\r\nexport default store","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\ContactUsScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\HowToPayScreen.js",["278"],"import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HowToPayScreen() {\r\n    return (\r\n        <div>\r\n            <h1>How to pay via Easypaisa</h1>\r\n            <h2>\r\n                First of all thank you ❤️❤️❤️very much for choosing us. and now complete the\r\n                steps below to pay\r\n            </h2>\r\n            <p>\r\n                <ol>\r\n                    <li>\r\n                        <input type=\"checkbox\" /> Pay on Easypaisa Account no.{\" \"}\r\n                        <h3>03174373258</h3> with title <q>Usama Ashfaq</q>\r\n                    </li>\r\n                    <li>\r\n                        <input type=\"checkbox\" /> Send the screenshot to same no.\r\n                        03174373258 via Whatsapp{\" \"}\r\n                                <a href=\"https://wa.me/923174373258\"> \r\n                        <Button variant=\"success\">\r\n                            <i class=\"fab fa-whatsapp\">Whatsapp\r\n                            </i>{\" \"}\r\n                           \r\n                        </Button>{\" \"}</a>\r\n                    </li>\r\n                    <li>\r\n                        Congratulation!. you are done. Your package will dispatched and\r\n                        reached to your doorstep with in 3-4 days\r\n                    </li>\r\n                </ol>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HowToPayScreen;\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\AboutUsScreen.js",["279"],"import React from 'react'\r\n\r\nfunction AboutUsScreen() {\r\n    return (\r\n        <div>\r\n\r\n            {/* <!-- START THE INTRO SECTION  --> */}\r\n            <section id=\"home\" class=\"intro-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row align-items-center text-white\">\r\n                        {/* <!-- START THE CONTENT FOR THE INTRO  --> */}\r\n                        <div class=\"col-md-6 intros text-start\">\r\n                            <h1 class=\"display-2\">\r\n                                <span class=\"display-2--intro\">Hey!, I'm XXXX xxxxx</span>\r\n                                <span class=\"display-2--description lh-base\">the founder of (this website) . In which you can nuy Lorem ipsum dolor sit amet.</span>\r\n                            </h1>\r\n\r\n                            <button type=\"button\" class=\"rounded-pill btn-rounded\">\r\n                                Get in Touch\r\n\r\n                                <span><i class=\"fas fa-arrow-right\"></i></span>\r\n                            </button>\r\n                        </div>\r\n                        {/* <!-- START THE CONTENT FOR THE VIDEO      --> */}\r\n\r\n                        <div class=\"col-md-6 intros text-end\">\r\n                            <div class=\"video-box\">\r\n                                <img src=\"./assets/New folder/Coding _Monochromatic.png\" alt=\"Video illustration\"\r\n                                    class=\"img-fluid\" />\r\n                                <span class=\"shadow\">\r\n                                    <a href=\"#\" class=\"glightbox\">\r\n                                        <i class=\"fas fa-play-circle\"></i>\r\n                                        <span class=\"border-animation border-animation--border-1\"></span>\r\n\r\n                                        <span class=\"border-animation border-animation--border-2\"></span>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                    <path fill=\"#ffff\" fill-opacity=\"1\"\r\n                        d=\"M0,192L40,176C80,160,160,128,240,96C320,64,400,32,480,26.7C560,21,640,43,720,90.7C800,139,880,213,960,208C1040,203,1120,117,1200,112C1280,107,1360,181,1400,218.7L1440,256L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z\">\r\n                    </path>\r\n                </svg>\r\n            </section>\r\n            {/* <!-- SERVICES SECTION --> */}\r\n            <section id=\"services\" class=\"services\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <h1 class=\"display-3 fw-bold text-center\">Our Services</h1>\r\n                        <div class=\"heading-line mb-1\"></div>\r\n                    </div>\r\n\r\n                    <div class=\"row pt-2 pb-2 mt-0 mb-3\">\r\n                        <div class=\"col-md-6 border-right\">\r\n                            <div class=\"bg-white p-3\">\r\n                                <h2 class=\"fw-bold text-center text-capitalize\">Lorem ipsum dolor sit amet consectetur\r\n                                    adipisicing elit. Perferendis, aspernatur.</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"bg-white p-4\">\r\n                                <p class=\"fw-light text-start\">\r\n                                    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quis corporis nostrum dolorum,\r\n                                    vero facilis, consectetur incidunt, officiis culpa consequuntur ab ipsam quod dignissimos\r\n                                    vitae\r\n                                    ipsum at dolor accusantium odio consequatur.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"container\">\r\n                    {/* <!-- SERVICE-1 --> */}\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4\">\r\n                            <div class=\"services__content\">\r\n                                <div class=\"icon d-block fas fa-paper-plane\"></div>\r\n                                <h3 class=\"display-3--title mt-1\">Front-end Web-development</h3>\r\n                                <p class=\"lh-lg\">\r\n                                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum, perspiciatis harum\r\n                                    iste nemo architecto, libero aperiam, corporis eos similique laudantium placeat corrupti\r\n                                    velit?\r\n                                    Consequuntur, quae!\r\n                                </p>\r\n                                <button type=\"button\" class=\"rounded-pill btn-rounded border-primary\">\r\n                                    Get in Touch\r\n\r\n                                    <span><i class=\"fas fa-arrow-right\"></i></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4 text-end\">\r\n                            <div class=\"services__pic\">\r\n                                <img src=\"/images/services/Coding _Outline.png\" alt=\"service-1\" class=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        {/* <!-- SERVICE-2 --> */}\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4 text-end\">\r\n\r\n                            <div class=\"services__pic\">\r\n                                <img src=\"/images/services/HTML_Two Color.png\" alt=\"service-2\" class=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4\">\r\n                            <div class=\"services__content\">\r\n                                <div class=\"icon d-block fas fa-paper-plane\"></div>\r\n                                <h3 class=\"display-3--title mt-1\">Full-Stack Web-development</h3>\r\n                                <p class=\"lh-lg\">\r\n                                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum, perspiciatis harum\r\n                                    iste nemo architecto, libero aperiam, corporis eos similique laudantium placeat corrupti\r\n                                    velit?\r\n                                    Consequuntur, quae!\r\n                                </p>\r\n                                <button type=\"button\" class=\"rounded-pill btn-rounded border-primary\">\r\n                                    Get in Touch\r\n\r\n                                    <span><i class=\"fas fa-arrow-right\"></i></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        {/* <!-- SERVICE-3 --> */}\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4\">\r\n                            <div class=\"services__content\">\r\n                                <div class=\"icon d-block fas fa-paper-plane\"></div>\r\n                                <h3 class=\"display-3--title mt-1\">E-commerce web apps</h3>\r\n                                <p class=\"lh-lg\">\r\n                                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum, perspiciatis harum\r\n                                    iste nemo architecto, libero aperiam, corporis eos similique laudantium placeat corrupti\r\n                                    velit?\r\n                                    Consequuntur, quae!\r\n                                </p>\r\n                                <button type=\"button\" class=\"rounded-pill btn-rounded border-primary\">\r\n                                    Get in Touch\r\n\r\n                                    <span><i class=\"fas fa-arrow-right\"></i></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4 text-end\">\r\n                            <div class=\"services__pic\">\r\n                                <img src=\"/images/services/Web Developer_Isometric.png\" alt=\"service-3\" class=\"img-fluid\" />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* <!-- START TESTIMONIAL SECTION --> */}\r\n            <section id=\"testimonials\" class=\"testimonials\">\r\n\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                    <path fill=\"#ffff\" fill-opacity=\"1\"\r\n                        d=\"M0,96L40,122.7C80,149,160,203,240,229.3C320,256,400,256,480,224C560,192,640,128,720,96C800,64,880,64,960,69.3C1040,75,1120,85,1200,85.3C1280,85,1360,75,1400,69.3L1440,64L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z\">\r\n                    </path>\r\n                </svg>\r\n                <div class=\"container\">\r\n                    <div class=\"row text-center text-white\">\r\n                        <h3 class=\"display-3 fw-bold\">Testimonials</h3>\r\n                        <hr style={{'height': '3px', 'width':'100%'}} />\r\n                        <div class=\"lead pt-3\">\r\n                            what our clients say?\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <!-- CAROUSEL CONTENT --> */}\r\n                    <div class=\"row align-items-center\">\r\n                        <div id=\"carouselExampleCaptions\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n\r\n                            <div class=\"carousel-inner\">\r\n\r\n                                {/* <!-- CAROUSEL-1   --> */}\r\n                                <div class=\"carousel-item active\">\r\n                                    {/* <!-- testimonials card --> */}\r\n                                    <div class=\"testimonials__card\">\r\n                                        <div class=\"lh-lg\">\r\n\r\n                                            <i class=\"fas fa-quote-left\"></i>\r\n                                            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cumque nesciunt\r\n                                            repudiandae velit\r\n                                            dicta doloremque esse omnis dignissimos, nostrum fugit ullam magni!\r\n                                            <i class=\"fas fa-quote-right\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <!-- client name & role --> */}\r\n                                    <div class=\"testimonials__name\">\r\n                                        <h3>Discoed</h3>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {/* <!-- CAROUSEL-2   --> */}\r\n                                <div class=\"carousel-item \">\r\n                                    {/* <!-- testimonials card --> */}\r\n                                    <div class=\"testimonials__card\">\r\n                                        <div class=\"lh-lg\">\r\n\r\n                                            <i class=\"fas fa-quote-left\"></i>\r\n                                            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cumque nesciunt\r\n                                            repudiandae velit\r\n                                            dicta doloremque esse omnis dignissimos, nostrum fugit ullam magni!\r\n                                            <i class=\"fas fa-quote-right\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <!-- client name & role --> */}\r\n                                    <div class=\"testimonials__name\">\r\n                                        <h3>Newton</h3>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {/* <!-- CAROUSEL-3  --> */}\r\n                                <div class=\"carousel-item \">\r\n                                    {/* <!-- testimonials card --> */}\r\n                                    <div class=\"testimonials__card\">\r\n                                        <div class=\"lh-lg\">\r\n\r\n                                            <i class=\"fas fa-quote-left\"></i>\r\n                                            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cumque nesciunt\r\n                                            repudiandae velit\r\n                                            dicta doloremque esse omnis dignissimos, nostrum fugit ullam magni!\r\n                                            <i class=\"fas fa-quote-right\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <!-- client name & role --> */}\r\n                                    <div class=\"testimonials__name\">\r\n                                        <h3>Einstien</h3>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"text-center\">\r\n                                <button class=\"btn btn-outline-light fas fa-long-arrow-alt-left\" type=\"button\"\r\n                                    data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"prev\">\r\n\r\n                                </button>\r\n                                <button class=\"btn btn-outline-light fas fa-long-arrow-alt-right\" type=\"button\"\r\n                                    data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"next\">\r\n\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                    <path fill=\"#ffff\" fill-opacity=\"1\"\r\n                        d=\"M0,96L40,122.7C80,149,160,203,240,229.3C320,256,400,256,480,224C560,192,640,128,720,96C800,64,880,64,960,69.3C1040,75,1120,85,1200,85.3C1280,85,1360,75,1400,69.3L1440,64L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z\">\r\n                    </path>\r\n                </svg>\r\n            </section>\r\n\r\n\r\n            {/* <!-- /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                START SECTION 8 - GET STARTED  \r\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////--> */}\r\n            <section id=\"contact\" class=\"get-started\">\r\n                <div class=\"container\">\r\n                    <div class=\"row text-center\">\r\n                        <h1 class=\"display-3 fw-bold text-capitalize\">Get started</h1>\r\n                        <div class=\"heading-line\"></div>\r\n                        <p class=\"lh-lg\">\r\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Libero illum architecto modi.\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/*  START THE CTA CONTENT */}\r\n                    <div class=\"row text-white\">\r\n                        <div class=\"col-12 col-lg-6 gradient shadow p-3\">\r\n                            <div class=\"cta-info w-100\">\r\n                                <h4 class=\"display-4 fw-bold\">100% Satisfaction Guaranteed</h4>\r\n                                <p class=\"lh-lg\">\r\n                                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam alias optio minima, tempore architecto\r\n                                    sint ipsam dolore tempora facere laboriosam corrupti!\r\n                                </p>\r\n                                <h3 class=\"display-3--brief\">What will be the next step?</h3>\r\n                                <ul class=\"cta-info__list\">\r\n                                    <li>We'll prepare the proposal.</li>\r\n                                    <li>we'll discuss it together.</li>\r\n                                    <li>let's start the discussion.</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 col-lg-6 bg-white shadow p-3\">\r\n                            <div class=\"form w-100 pb-2\">\r\n                                <h4 class=\"display-3--title mb-5\">start your project</h4>\r\n                                <form action=\"#\" class=\"row\">\r\n                                    <div class=\"col-lg-6 col-md mb-3\">\r\n                                        <input type=\"text\" placeholder=\"First Name\" id=\"inputFirstName\"\r\n                                            class=\"shadow form-control form-control-lg\" />\r\n                                    </div>\r\n                                    <div class=\"col-lg-6 col-md mb-3\">\r\n                                        <input type=\"text\" placeholder=\"Last Name\" id=\"inputLastName\"\r\n                                            class=\"shadow form-control form-control-lg\" />\r\n                                    </div>\r\n                                    <div class=\"col-lg-12 mb-3\">\r\n                                        <input type=\"email\" placeholder=\"email address\" id=\"inputEmail\"\r\n                                            class=\"shadow form-control form-control-lg\" />\r\n                                    </div>\r\n                                    <div class=\"col-lg-12 mb-3\">\r\n                                        <textarea name=\"message\" placeholder=\"message\" id=\"message\" rows=\"8\"\r\n                                            class=\"shadow form-control form-control-lg\"></textarea>\r\n                                    </div>\r\n                                    <div class=\"text-center d-grid mt-1\">\r\n                                        <button type=\"button\" class=\"btn btn-primary rounded-pill pt-3 pb-3\">\r\n                                            submit\r\n                                            <i class=\"fas fa-paper-plane\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n                  \r\n                    )\r\n}\r\n\r\nexport default AboutUsScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProductScreen.js",["280"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const [qty, setQty] = useState(1)\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productMedia = useSelector(state => state.productDetails.product.media)\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const imageRef = useRef(null)\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    const addToWishlistHandler = () => {\r\n        history.push(`/wishlist/${match.params.id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setComment('')\r\n            setRating(0)\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n\r\n    }, [dispatch, match, successProductReview]\r\n    )\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n\r\n    const mediaChangeHandler = (src) => {\r\n        imageRef.current.src = src\r\n    }\r\n    const [position, setPosition] = useState({ backgroundPosition: '0% 0%' })\r\n\r\n\r\n    const handleMouseMove = e => {\r\n        const { left, top, width, height } = e.target.getBoundingClientRect()\r\n        const x = (e.pageX - left) / width * 100\r\n        const y = (e.pageY - top) / height * 100\r\n        setPosition({ backgroundPosition: `${x}% ${y}%` })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n            {loading ? <Loader />\r\n                : error ? <Message variant=\"danger\">{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row  >\r\n\r\n                                <Col md={6}>\r\n                                    <figure onMouseMove={handleMouseMove} style={position}>\r\n\r\n                                        <Image src={product.image} alt={product.name} ref={imageRef} fluid />\r\n                                    </figure>\r\n                                    <Row md={3} className=\"container-fluid\">\r\n                                        {productMedia &&\r\n                                            <ListGroup variant=\"flush\">\r\n                                                {\r\n                                                    productMedia[0]?.image3 && <ListGroup.Item >\r\n\r\n                                                        <Image src={productMedia[0].image3} alt={productMedia[0].image3} onClick={(e) => { mediaChangeHandler(e.target.src) }} fluid />\r\n\r\n                                                    </ListGroup.Item>\r\n                                                }\r\n\r\n                                                {\r\n                                                    productMedia[0]?.image4 && <ListGroup.Item >\r\n\r\n                                                        <Image src={productMedia[0].image4} alt={productMedia[0].image5} onClick={(e) => { mediaChangeHandler(e.target.src) }} fluid />\r\n\r\n                                                    </ListGroup.Item>\r\n                                                }\r\n                                                {\r\n                                                    productMedia[0]?.image5 && <ListGroup.Item >\r\n\r\n                                                        <Image src={productMedia[0].image5} alt={productMedia[0].image5} onClick={(e) => { mediaChangeHandler(e.target.src) }} fluid />\r\n\r\n                                                    </ListGroup.Item>\r\n                                                }\r\n                                                {\r\n                                                    productMedia[0]?.video && <ListGroup.Item >\r\n\r\n                                                        <video width=\"300\" controls   >\r\n                                                            <source src={productMedia[0].video} type=\"video/mp4\" />\r\n                                                        </video>\r\n                                                    </ListGroup.Item>\r\n                                                }\r\n\r\n                                            </ListGroup>\r\n                                        }\r\n                                    </Row>\r\n\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: {product.price}/-PKR\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} /-PKR</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <>\r\n                                                    <Button\r\n                                                        onClick={addToCartHandler}\r\n\r\n                                                        className='btn-block'\r\n                                                        disabled={product.countInStock === 0}\r\n                                                        type='button'>\r\n                                                        Add to Cart\r\n                                                    </Button>\r\n                                                    <p></p>\r\n                                                    <Button\r\n                                                        onClick={addToWishlistHandler}\r\n\r\n                                                        className='btn-block'\r\n                                                        disabled={product.countInStock === 0}\r\n                                                        type='button'>\r\n                                                        Add to Wishlist\r\n                                                    </Button>\r\n\r\n                                                </>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                            <Row >\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    )\r\n\r\n\r\n\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\HomeScreen.js",["281","282","283","284"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport queryString from 'query-string';\r\nimport { googleAuthenticate } from '../actions/userActions'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport ProductCarousal from '../components/ProductCarousal'\r\nimport { USER_REGISTER_SUCCESS, USER_ACTIVATE_SUCCESS } from '../constants/userConstants'\r\nfunction HomeScreen({ history }) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products } = productList\r\n\r\n\r\n    // const userActivate = useSelector(state => state.userActivate)\r\n    // const { success } = userActivate\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { success:successRegister } = userRegister\r\n\r\n    let keyword = history.location.search\r\n    let state = history.location.search\r\n    let code = history.location.search\r\n\r\n\r\n    // console.log(keyword)\r\n    // console.log('State: ' + state);\r\n    // console.log('Code: ' + code);\r\n\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n  \r\n    useEffect(() => {\r\n       \r\n        \r\n        dispatch(listProducts(keyword))\r\n\r\n        if(successRegister){\r\n            setMessage('Please check your email to activate your account. We have sent a link there')\r\n\r\n        }\r\n        // setMessage('')\r\n        // console.log(products.length)\r\n        console.log(message)\r\n        if (state && code) {\r\n            dispatch(googleAuthenticate(state, code));\r\n          }\r\n    }, [code, dispatch, keyword, message, state, successRegister]\r\n    )\r\nconst searchTerm = keyword.split('=')[1]\r\nconst searchResults =  Number(products.length)\r\n\r\n    return (\r\n        <div>\r\n            {message && (<Message variant='success'>{message}</Message>)}\r\n            {!keyword && <ProductCarousal />}\r\n            {(!keyword && (<h1>Latest Products (updated)</h1>)) || (\r\n            <>\r\n\r\n            <h2>Search Result for</h2><p>\"{searchTerm}\"</p>\r\n            <p>{searchResults} products were found</p>\r\n            </>\r\n             )}\r\n            \r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant='danger'>{error}</Message>)\r\n                    : <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        )\r\n                        )}\r\n                    </Row>\r\n            }\r\n     \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Footer.js",["285","286","287","288"],"import React from 'react'\r\nimport './Footer.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer >\r\n            <div className=\"container\">\r\n                <div className=\"sec about-us\">\r\n                    <h2>About Us</h2>\r\n                    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Laudantium ut iste laboriosam dolore deleniti sit, nobis assumenda aspernatur voluptates. Eum, veritatis? Exercitationem pariatur nisi quos aperiam a fugiat recusandae suscipit.</p>\r\n                    <ul className='sci'>\r\n                        <li><a href=\"https://www.facebook.com/itsUsamaAshfaq\" target='_blank'><i class=\"fab fa-facebook-square\" aria-hidden='true'></i></a></li>\r\n                        <li><a href=\"https://www.instagram.com/usamaashfaq6364/\" target='_blank' ><i class=\"fab fa-instagram\" aria-hidden='true'></i></a></li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n                <div className=\"sec quick-links\">\r\n                    <h2>Quick Links</h2>\r\n                    <ul>\r\n                        <li><Link to=\"/about-us\">\r\n                            \r\n                                About\r\n                            \r\n\r\n\r\n                        </Link></li>\r\n                        <li><Link to=\"faqs\">\r\n                            \r\n                                FAQs\r\n                            \r\n\r\n                        </Link> </li>\r\n                        <li><Link to=\"/privacy-policy\">\r\n                         \r\n\r\n                                Privacy Policy\r\n                         \r\n\r\n                        </Link> </li>\r\n                       \r\n                        <li><Link to=\"/terms-and-conditions\">\r\n                            \r\n                                Terms & Condition\r\n\r\n                            \r\n                        </Link> </li>\r\n                        <li><Link to=\"/contact-us\">\r\n                            \r\n                                Contact\r\n                          \r\n                        </Link> </li>\r\n                    </ul>\r\n\r\n                </div>\r\n                <div className=\"sec contact\">\r\n                    <h2>Contact Info</h2>\r\n\r\n                    <ul className=\"info\">\r\n                        <li>\r\n                            <span><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                            <span><a href=\"https://goo.gl/maps/9C5xdh5W1XVihmb48\" target='_blank' rel=\"noreferrer\"> D-XXX , Thermal Power Station <br />Muzzaffargarh 34200 <br />Pakistan</a></span>\r\n                        </li>\r\n                        <li>\r\n                            <span><i class=\"fas fa-phone-alt\"></i></span>\r\n                            <p><a href=\"tel:923174373258\">+92 317 4373258</a></p>\r\n                        </li>\r\n                        <li>\r\n                            <span><i class=\"far fa-envelope\"></i></span>\r\n                            <p><a href=\"mailto:itsusamaashfaq@gmail.com\">itsusamaashfaq@gmail.com</a></p>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"copyright text-center py-3\">\r\n                copyright &copy; UsamaComputers All rights reserved\r\n\r\n            </div>\r\n\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CartScreen.js",["289","290"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { addToCart , removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ history, location, match }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    useEffect(\r\n        () => {\r\n            if (productId) {\r\n                dispatch(addToCart(productId, qty))\r\n            }\r\n        }, [dispatch, productId, qty]\r\n    )\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler = ()=>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            {item.price}/-pkr\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n            export default CartScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Header.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\PaymentScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js",["291"],"import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n  // cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n  cart.shippingPrice = 200;\r\n\r\n  cart.taxPrice = Number(0 * cart.itemsPrice).toFixed(2);\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      console.log(\"order\");\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"  \"}\r\n                {cart.shippingAddress.postalCode},{\"  \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X {item.price}/-PKR ={\" \"}\r\n                          {(item.qty * item.price).toFixed(2)}/-PKR\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>{cart.itemsPrice}/-PKR</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>{cart.shippingPrice}/-PKR</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>{cart.taxPrice}/-PKR</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>{cart.totalPrice}/-PKR</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\OrderScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\WishlistScreen.js",["292","293","294","295"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { addToWishlist , removeFromWishlist } from '../actions/wishlistActions'\r\n\r\nfunction WishlistScreen({ history , match }) {\r\n    const productId = match.params.id\r\n   \r\n    const dispatch = useDispatch()\r\n    const wishlist = useSelector(state => state.wishlist)\r\n    const { wishlistItems } = wishlist\r\n    useEffect(\r\n        () => {\r\n            if (productId) {\r\n             \r\n                dispatch(addToWishlist(productId))\r\n            }\r\n            console.log('id',productId)\r\n        }, [dispatch, productId]\r\n    )\r\n    const removeFromWishlistHandler = (id) => {\r\n        dispatch(removeFromWishlist(id))\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Your Wishlist</h1>\r\n                {wishlistItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your Wishlist is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {wishlistItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                             <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            {item.price}/-PKR\r\n                                        </Col>\r\n\r\n                                        {/* <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToWishlist(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col> */}\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromWishlistHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            {/* <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({wishlistItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${wishlistItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                    <Button\r\n                                                    onClick={addToCartHandler}\r\n\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock === 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col> */}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default WishlistScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\UserListScreen.js",["296","297","298"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    const { users, loading, error } = useSelector(state => state.userList)\r\n\r\n    const { success: successDelete } = useSelector(state => state.userDelete)\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n    }, [dispatch, userInfo, history, successDelete]\r\n    )\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n        return (\r\n            <div>\r\n                <h1>Users</h1>\r\n                {loading\r\n                    ? (<Loader />)\r\n                    : error\r\n                        ? (<Message variant='danger'>{error}</Message>)\r\n                        : (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>EMAIL</th>\r\n                                        <th>ADMIN</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {users.map(user => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.isAdmin ? (\r\n                                                <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                            ) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default UserListScreen\r\n\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ShippingScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\UserEditScreen.js",["299","300"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails , updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setAdmin] = useState(false)\r\n    const userId = match.params.id\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error:errorUpdate, loading:loadingUpdate , success:successUpdate } = userUpdate\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [dispatch ,user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n        \r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProfileScreen.js",["301"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails ,updateUserProfile} from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction  ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n// || userInfo._id !== user._id \r\n// || !user.name || \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || success ) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails())\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, success, user, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n                \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\OrderListScreen.js",["302","303","304"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    const { orders, loading, error } = useSelector(state => state.orderList)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n    }, [dispatch, userInfo, history]\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            (order.paidAt)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered ? (\r\n                                            (order.deliveredAt.substring(0, 10))\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}/`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderListScreen\r\n\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProductListScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\ProductEditScreen.js",["305","306","307","308","309"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { categoryProducts, includeCategory } from '../actions/categoryActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [bannerImage, setBannerImage] = useState('')\r\n    const [image3, setImage3] = useState('')\r\n    const [image4, setImage4] = useState('')\r\n    const [image5, setImage5] = useState('')\r\n    const [video, setVideo] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [Featured, setFeatured] = useState(false)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    const productCategory = useSelector(state => state.productCategory)\r\n    const { error: errorCategory, loading: loadingCategory, products: productsCategory } = productCategory\r\n\r\n    const categoryInclude = useSelector(state => state.categoryInclude)\r\n    const { error: errorInclude, loading: loadingInclude, success: successInclude } = categoryInclude\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n                dispatch(categoryProducts())\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBannerImage(product.media.bannerImage)\r\n                setImage3(product.media.image3)\r\n                setImage4(product.media.image4)\r\n                setImage5(product.media.image5)\r\n                setVideo(product.media.video)\r\n                setBrand(product.brand)\r\n                setFeatured(product.Featured)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image, bannerImage, image3, image4, image5, video,\r\n            Featured,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n\r\n    }\r\n\r\n    const includeCategoryHandler = async (categoryId, productId) => {\r\n        dispatch(includeCategory(categoryId, productId))\r\n        setCategory(product.category)\r\n\r\n    }\r\n    \r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        console.log(e.target.files[0])\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist/'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Main Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label=''\r\n                                    // custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image - 2 </Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image3}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label=''\r\n                                    // custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image - 3</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image4}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label=''\r\n                                    // custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Form.Group controlId='Featured'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Add to Featured'\r\n                                    checked={Featured}\r\n                                    onChange={(e) => setFeatured(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <br />\r\n                            {Featured &&\r\n\r\n                                <Form.Group controlId='image'>\r\n                                    <Form.Label>Banner Image</Form.Label>\r\n                                    <Form.Control\r\n\r\n                                        type='text'\r\n                                        placeholder='Enter banner Image'\r\n                                        value={bannerImage}\r\n                                        onChange={(e) => setImage(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                    <Form.File\r\n                                        id='image-file'\r\n                                        label=''\r\n                                        // custom\r\n                                        onChange={uploadFileHandler}\r\n                                    >\r\n\r\n                                    </Form.File>\r\n                                    {uploading && <Loader />}\r\n\r\n                                </Form.Group>\r\n                            }\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Add Video 📺</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter video'\r\n                                    value={video}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label=''\r\n                                    // custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n\r\n\r\n                                <Form.Control\r\n                                    as='select'\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={product.category}\r\n                                    onChange={(e) => includeCategoryHandler(e.target.value, productId)}\r\n                                >\r\n                                    {productsCategory.map(product => {\r\n                                        return (\r\n                                            <option key={product.id} value={product.id}> {product.product_category}\r\n\r\n\r\n                                            </option>\r\n\r\n                                        );\r\n                                    })}\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\ActivateScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\LoginScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\GoogleScreen.js",["310"],"import React, { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getUserDetails, googleAuthenticate } from '../../actions/userActions'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport queryString from 'query-string';\r\n\r\nfunction GoogleScreen() {\r\n    let location = useLocation();\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const values = queryString.parse(location.search);\r\n        const state = values.state ? values.state : null;\r\n        const code = values.code ? values.code : null;\r\n\r\n        console.log('State: ' + state);\r\n        console.log('Code: ' + code);\r\n\r\n   \r\n        dispatch(googleAuthenticate(state, code))\r\n        \r\n        \r\n        \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [location  ]);\r\n\r\n    return (\r\n        <div className='container'>\r\n        <div class='jumbotron mt-5'>\r\n            <h1 class='display-4'>Welcome to Auth System!</h1>\r\n            <p class='lead'>This is an incredible authentication system with production level features!</p>\r\n            <hr class='my-4' />\r\n            <p>Click the Log In button</p>\r\n            <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default GoogleScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\RegisterScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\ResetPasswordConfirmScreen.js",["311"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { resetUserPasswordConfirm } from '../../actions/userActions';\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport FormContainer from '../../components/FormContainer'\r\n\r\n\r\nfunction ResetPasswordConfirmScreen({ match, history }) {\r\n    const [message, setMessage] = useState('');\r\n\r\n    const id = match.params.id;\r\n    const token = match.params.token;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (new_password !== re_new_password){\r\n            setMessage('Password does not match')\r\n        }else{\r\n            dispatch(resetUserPasswordConfirm(id, token, new_password, re_new_password));\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const userPasswordResetConfirm = useSelector(state => state.userPasswordResetConfirm)\r\n    const { error, loading, success } = userPasswordResetConfirm\r\n\r\n    useEffect(() => {\r\n       \r\n        if (success) {\r\n\r\n            setMessage('Your password is changed successfully. Next time keep it remember.')\r\n\r\n            history.push('/login')\r\n\r\n        }\r\n        setMessage('')\r\n\r\n    }, [success, history , new_password , re_new_password])\r\n\r\n    return (\r\n        <FormContainer >\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n                <Form.Group className='form-group'>\r\n                    <Form.Control\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='8'\r\n                        required\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <p></p>\r\n                <Form.Group className='form-group'>\r\n                    <Form.Control\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='8'\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <br></br>\r\n                <Button className='btn btn-primary' type='submit'>Reset Password</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordConfirmScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\FAQScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\PrivacyPolicyScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\AccountScreens\\ResetPasswordScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\BlogScreens\\TermsAndConditionsScreen.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\productReducers.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\cartReducers.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\wishlistReducers.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\userReducers.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\reducers\\categoryReducers.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CategoryListScreen.js",["312","313","314","315","316","317","318","319"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Table, Row, Col } from 'react-bootstrap'\r\n\r\nimport { categoryProducts, deleteCategory, createCategory, editCategory } from '../actions/categoryActions'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction CategoryScreen() {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productCategory = useSelector(state => state.productCategory)\r\n    const { error, loading, products } = productCategory\r\n    \r\n    const categoryCreate = useSelector(state => state.categoryCreate)\r\n    const { error: errorCreate, loading: loadingCreate, category, success: successCreate } = categoryCreate\r\n   \r\n   \r\n\r\n    const categoryDelete = useSelector(state => state.categoryDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = categoryDelete\r\n\r\n    useEffect(() => {\r\n\r\n      \r\n        dispatch(categoryProducts())\r\n\r\n\r\n\r\n    }, [dispatch, successDelete, successCreate ])\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this category? It will remove all related products from it')) {\r\n            dispatch(deleteCategory(id))\r\n        }\r\n    }\r\n\r\n\r\n    const createCategoryHandler = () => {\r\n        dispatch(createCategory())\r\n        console.log('some things')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Categories</h1>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th >NAME</th>\r\n                                   \r\n                                 \r\n                                    <th >edit button</th>\r\n                                    <th >delete</th>\r\n\r\n\r\n\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product.id}>\r\n                                        <td>{product.id}</td>\r\n\r\n                                        <td  >\r\n                                            {product.product_category}\r\n                                        </td>\r\n                                        \r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/categorylist/${product.id}/edit`}>\r\n\r\n                                             <Button variant='light'  className='btn-sm' >\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                            </LinkContainer>\r\n                                           \r\n                                        </td>\r\n                                        <td>\r\n\r\n                                            <Button variant='danger'  className='btn-sm' onClick={() => deleteHandler(product.id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n                                <Button className='my-3' onClick={createCategoryHandler}>\r\n                                    <i className='fas fa-plus'></i> Create A New Category\r\n                                </Button>\r\n\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n\r\n\r\n                       \r\n                    )\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CategoricallyProductsScreen.js",["320","321","322"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categoryListProducts, categoryProducts } from '../actions/categoryActions'\r\n\r\n\r\n\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nfunction CategoricallyProductsScreen({ match }) {\r\n    const categoryId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n    const productCategoryList = useSelector(state => state.productCategoryList)\r\n    const { error, loading, products } = productCategoryList\r\n\r\n\r\n\r\n    const productCategory = useSelector(state => state.productCategory)\r\n    const { error: errorCategory, loading: loadingCategory, products: productsCategory } = productCategory\r\n    const x =  productsCategory.find(e => {\r\n        return e.id === Number(categoryId)\r\n    })\r\n\r\n    let y = x.product_category\r\n\r\n    useEffect(() => {\r\n\r\n        // dispatch(categoryProducts())\r\n        dispatch(categoryListProducts(categoryId))\r\n        console.log(productsCategory)\r\n        console.log(categoryId)\r\n        console.log(x.product_category)\r\n\r\n    }, [dispatch, productsCategory, categoryId, x]\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n            {loadingCategory ? (<Loader />)\r\n                : errorCategory ? (<Message variant='danger'>{error}</Message>)\r\n                    :\r\n\r\n                (<h1>\r\n                    {y}\r\n                </h1>)\r\n\r\n                }\r\n\r\n            </>\r\n\r\n\r\n\r\n\r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant='danger'>{error}</Message>)\r\n                    : <Row>\r\n\r\n                        {products.map(product => (\r\n\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n\r\n                            </Col>\r\n                        )\r\n                        )}\r\n\r\n                    </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoricallyProductsScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\screens\\CategoryEditScreen.js",["323","324","325"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport { categoryProducts, editCategory } from '../actions/categoryActions'\r\nimport { CATEGORY_EDIT_RESET } from '../constants/categoryConstants'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nfunction CategoryEditScreen({ match , history }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const [newCategory, setNewCategory] = useState('')\r\n    const categoryEdit = useSelector(state => state.categoryEdit)\r\n    const { error: errorEdit, loading: loadingEdit, success: successEdit } = categoryEdit\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('something', match.params.id,newCategory)\r\n\r\n\r\n        dispatch(editCategory({ product_category: newCategory}, match.params.id))\r\n\r\n        // history.push('/admin/categorylist')\r\n        // dispatch(categoryProducts())\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (successEdit) {\r\n            setNewCategory('')\r\n            \r\n            dispatch(categoryProducts())\r\n            setMessage(' Horah! Category updated successfully ✓')\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, successEdit ])\r\n\r\n    return (\r\n        <>\r\n            {message && <Message variant='success'>{message}</Message>}\r\n            {errorEdit && <Message variant='danger'>{errorEdit}</Message>}\r\n            {loadingEdit && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n\r\n                <Form.Group controlId='category'>\r\n\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter New Category'\r\n                        name=\"New Category\"\r\n                        value={newCategory}\r\n                        onChange={(e) => setNewCategory(e.target.value)}\r\n                    >\r\n\r\n\r\n                    </Form.Control>\r\n\r\n\r\n\r\n                <Button >\r\n                <i class=\"fas fa-check\"></i>  Update\r\n                </Button>\r\n\r\n                </Form.Group>\r\n            </Form>\r\n\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default CategoryEditScreen\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Message.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Loader.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Product.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\ProductCarousal.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\FormContainer.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Rating.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\SearchBox.js",["326"],"import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './SearchBar.css'\r\n\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {/* <Form className='mr-sm-2 ml-sm-5 rounded input-large' >\r\n                <div class=\"container \" onSubmit={submitHandler} >\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-8 col-xs-offset-2\">\r\n                            <div class=\"input-group rounded\">\r\n\r\n                                <input type=\"text\" class=\"form-control rounded   \" onChange={(e) => setKeyword(e.target.value)} name=\"keyword\" id=\"search\" placeholder=\"Search\" />\r\n                                <span class=\"input-group-btn\">\r\n                                    <Button\r\n                                        type='submit'\r\n                                        variant='outline-success'\r\n                                        className='p-2 rounded '\r\n                                    >\r\n                                        <i class=\"fas fa-search\"></i>\r\n                                    </Button>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </Form> */}\r\n\r\n\r\n            <form class=\"d-flex search-form\" onSubmit={submitHandler}>\r\n                <input class=\"form-control me-2 rounded-pill\"  onChange={(e) => setKeyword(e.target.value)} name=\"keyword\" type=\"search\" placeholder=\"Search\"\r\n                    aria-label=\"Search\" />\r\n               <span class=\"input-group-btn\">\r\n                                    <Button\r\n                                        type='submit'\r\n                                        variant='outline-success'\r\n                                        className='p-2 rounded-pill '\r\n                                    >\r\n                                        <i class=\"fas fa-search\"></i>\r\n                                    </Button>\r\n                                </span>\r\n            </form>\r\n\r\n\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\cartActions.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\CheckoutSteps.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\components\\Sidebar.js",["327","328","329","330","331"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport './Sidebar.css'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { categoryProducts } from '../actions/categoryActions'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// const [sidebar, setSidebar] = useState(false);\r\n\r\nfunction Sidebar({sidebar}) {\r\n\r\n    // const showSidebar = () => setSidebar(!sidebar);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productCategory = useSelector(state => state.productCategory)\r\n    const { error, loading, products } = productCategory\r\n\r\n\r\n    let history = useHistory()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(categoryProducts())\r\n\r\n       \r\n\r\n\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                <ul className='nav-menu-items' onClick={!sidebar}>\r\n                    <li className='navbar-toggle'>\r\n                        <Link to='#' className='menu-bars'>\r\n                            Categories\r\n                        </Link>\r\n                    </li>\r\n                    {products.map(product => {\r\n                        return (\r\n                            <li key={product.id} className='nav-text'>\r\n                                <Link to={`/category/${product.id}`}>\r\n\r\n                                    <span> {product.product_category}</span>\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\orderActions.js",["332"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (order) => async (dispatch, getState) => {\r\n    const {\r\n        userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Authorization': `JWT ${userInfo.token}`\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const { data } = await axios.put(\r\n        `/api/orders/${order._id}/pay/`,\r\n        {},  // yeh kia cheez hai bhai ???\r\n        config\r\n    )\r\n\r\n\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\productActions.js",["333","334","335"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n\r\n} from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n\r\n\r\n        const { data } = await axios.get(`/api/products/${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.delete(`/api/products/delete/${id}/`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\ntry {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\userActions.js",["336"],"import axios from 'axios'\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_ACTIVATE_REQUEST,\r\n    USER_ACTIVATE_SUCCESS,\r\n    USER_ACTIVATE_FAIL,\r\n\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n\r\n    USER_PASSWORD_RESET_REQUEST,\r\n    USER_PASSWORD_RESET_SUCCESS,\r\n    USER_PASSWORD_RESET_FAIL,\r\n\r\n    USER_PASSWORD_RESET_CONFIRM_REQUEST,\r\n    USER_PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    USER_PASSWORD_RESET_CONFIRM_FAIL,\r\n\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        //  '/auth/jwt/create/',\r\n\r\n        const { data } = await axios.post(\r\n            `/api/users/login/`,\r\n            { 'username': username, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const register = (username, email, password, re_password) => async (dispatch) => {\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n\r\n    const { data } = await axios.post(\r\n        '/auth/users/',\r\n        { 'username': username, 'email': email, 'password': password, 're_password': re_password },\r\n        config\r\n    )\r\n\r\n\r\n\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n\r\n      \r\n\r\n\r\n        // const body = JSON.stringify({ username, email, password });\r\n\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n//  I  commented out this  so that I can test the user log in and sign up faster ... I will uncomment this later InshaAllah\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.detail\r\n                    ? error.response.data.detail\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const activate = (uid, token) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_ACTIVATE_REQUEST\r\n        })\r\n\r\n        \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n               \r\n            }\r\n        }\r\n        const body = JSON.stringify({ uid, token });\r\n\r\n        const { data } = await axios.post(`/auth/users/activation/`, body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_ACTIVATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        // dispatch(login())\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ACTIVATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n// && !localStorage.getItem('userInfo')\r\n\r\nexport const googleAuthenticate = (state, code) => async dispatch => {\r\n    if (state && code ) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details = {\r\n            'state': state,\r\n            'code': code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try {\r\n            const { data } = await axios.post(`http://127.0.0.1:8000/auth/o/google-oauth2/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type: GOOGLE_AUTH_SUCCESS,\r\n                payload: data\r\n            });\r\n            \r\n            // dispatch(getUserDetails());\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    token: data.access,\r\n                    refresh: data.refresh,\r\n                    access: data.access,\r\n                    email: data.user,\r\n                    name: data.user\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                    ? error.response.data.detail\r\n                    : error.message,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n       \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n       \r\n        const { data } = await axios.get('/auth/users/me/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const resetUserPassword = (email) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_PASSWORD_RESET_REQUEST\r\n        })\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/auth/users/reset_password/`,\r\n            { 'email': email },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_PASSWORD_RESET_SUCCESS,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PASSWORD_RESET_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const resetUserPasswordConfirm = (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n\r\n\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n    try {\r\n        dispatch({\r\n            type: USER_PASSWORD_RESET_CONFIRM_REQUEST\r\n        })\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n\r\n        await axios.post(\r\n            `http://127.0.0.1:8000/auth/users/reset_password_confirm/`, // this is an exception that is to be changed later\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_PASSWORD_RESET_CONFIRM_SUCCESS,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PASSWORD_RESET_CONFIRM_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n\r\n        })\r\n    }\r\n}","E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\userConstants.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\productConstants.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\wishlistActions.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\orderConstants.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\wishlistConstants.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\cartConstants.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\constants\\categoryConstants.js",[],"E:\\forpros.com\\forpros.com\\backend\\frontend\\src\\actions\\categoryActions.js",["337","338","339"],"import {\r\n    CATEGORY_CREATE_REQUEST,\r\n    CATEGORY_CREATE_SUCCESS,\r\n    CATEGORY_CREATE_FAIL,\r\n    CATEGORY_CREATE_RESET,\r\n\r\n    PRODUCT_CATEGORY_REQUEST,\r\n    PRODUCT_CATEGORY_SUCCESS,\r\n    PRODUCT_CATEGORY_FAIL,\r\n\r\n\r\n    PRODUCT_CATEGORY_LIST_REQUEST,\r\n    PRODUCT_CATEGORY_LIST_SUCCESS,\r\n    PRODUCT_CATEGORY_LIST_FAIL,\r\n    \r\n    CATEGORY_DELETE_REQUEST,\r\n    CATEGORY_DELETE_SUCCESS,\r\n    CATEGORY_DELETE_FAIL,\r\n\r\n    CATEGORY_INCLUDE_REQUEST,\r\n    CATEGORY_INCLUDE_SUCCESS,\r\n    CATEGORY_INCLUDE_FAIL,\r\n\r\n    CATEGORY_EDIT_REQUEST,\r\n    CATEGORY_EDIT_SUCCESS,\r\n    CATEGORY_EDIT_FAIL,\r\n    CATEGORY_EDIT_RESET,\r\n\r\n} from '../constants/categoryConstants'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const createCategory = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/category/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: CATEGORY_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const editCategory = (product_category,id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_EDIT_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/category/${id}/edit/`,\r\n            product_category,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: CATEGORY_EDIT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // dispatch({\r\n        //     type: PRODUCT_DETAILS_SUCCESS,\r\n        //     payload: data,\r\n        // })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_EDIT_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const includeCategory = (categoryId,productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CATEGORY_INCLUDE_REQUEST })\r\n        \r\n        \r\n        const formDataForCat = new FormData()\r\n        formDataForCat.append('product_id', productId)\r\n\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/category/update/${categoryId}/`, formDataForCat, config)\r\n        \r\n        console.log(data)\r\n        dispatch({\r\n            type: CATEGORY_INCLUDE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_INCLUDE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const categoryProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CATEGORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/category/categorylist/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CATEGORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CATEGORY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n \r\n\r\nexport const categoryListProducts = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CATEGORY_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/category/${id}/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CATEGORY_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CATEGORY_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CATEGORY_DELETE_REQUEST })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.delete(`/api/category/delete/${id}/`, config)\r\n\r\n        dispatch({\r\n            type: CATEGORY_DELETE_SUCCESS,\r\n\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n",{"ruleId":"340","severity":1,"message":"341","line":50,"column":42,"nodeType":"342","messageId":"343","endLine":50,"endColumn":53},{"ruleId":"340","severity":1,"message":"344","line":101,"column":7,"nodeType":"342","messageId":"343","endLine":101,"endColumn":31},{"ruleId":"340","severity":1,"message":"345","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":14},{"ruleId":"346","severity":1,"message":"347","line":31,"column":37,"nodeType":"348","endLine":31,"endColumn":67},{"ruleId":"340","severity":1,"message":"349","line":25,"column":13,"nodeType":"342","messageId":"343","endLine":25,"endColumn":22},{"ruleId":"340","severity":1,"message":"350","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":19},{"ruleId":"340","severity":1,"message":"341","line":7,"column":10,"nodeType":"342","messageId":"343","endLine":7,"endColumn":21},{"ruleId":"340","severity":1,"message":"351","line":14,"column":10,"nodeType":"342","messageId":"343","endLine":14,"endColumn":31},{"ruleId":"340","severity":1,"message":"352","line":14,"column":33,"nodeType":"342","messageId":"343","endLine":14,"endColumn":54},{"ruleId":"353","severity":1,"message":"354","line":14,"column":29,"nodeType":"348","messageId":"355","endLine":14,"endColumn":95,"fix":"356"},{"ruleId":"357","severity":1,"message":"358","line":14,"column":29,"nodeType":"348","endLine":14,"endColumn":95},{"ruleId":"353","severity":1,"message":"354","line":15,"column":29,"nodeType":"348","messageId":"355","endLine":15,"endColumn":99,"fix":"359"},{"ruleId":"357","severity":1,"message":"358","line":15,"column":29,"nodeType":"348","endLine":15,"endColumn":99},{"ruleId":"340","severity":1,"message":"360","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"361","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":41,"column":6,"nodeType":"364","endLine":41,"endColumn":24,"suggestions":"365"},{"ruleId":"340","severity":1,"message":"360","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"366","line":4,"column":46,"nodeType":"342","messageId":"343","endLine":4,"endColumn":50},{"ruleId":"340","severity":1,"message":"367","line":4,"column":52,"nodeType":"342","messageId":"343","endLine":4,"endColumn":56},{"ruleId":"340","severity":1,"message":"361","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":14},{"ruleId":"340","severity":1,"message":"360","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"368","line":3,"column":25,"nodeType":"342","messageId":"343","endLine":3,"endColumn":28},{"ruleId":"340","severity":1,"message":"369","line":3,"column":30,"nodeType":"342","messageId":"343","endLine":3,"endColumn":33},{"ruleId":"340","severity":1,"message":"370","line":19,"column":12,"nodeType":"342","messageId":"343","endLine":19,"endColumn":19},{"ruleId":"340","severity":1,"message":"371","line":19,"column":21,"nodeType":"342","messageId":"343","endLine":19,"endColumn":31},{"ruleId":"340","severity":1,"message":"345","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":14},{"ruleId":"340","severity":1,"message":"360","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"368","line":3,"column":25,"nodeType":"342","messageId":"343","endLine":3,"endColumn":28},{"ruleId":"340","severity":1,"message":"369","line":3,"column":30,"nodeType":"342","messageId":"343","endLine":3,"endColumn":33},{"ruleId":"340","severity":1,"message":"372","line":42,"column":20,"nodeType":"342","messageId":"343","endLine":42,"endColumn":33},{"ruleId":"340","severity":1,"message":"373","line":42,"column":44,"nodeType":"342","messageId":"343","endLine":42,"endColumn":59},{"ruleId":"340","severity":1,"message":"374","line":45,"column":20,"nodeType":"342","messageId":"343","endLine":45,"endColumn":32},{"ruleId":"340","severity":1,"message":"375","line":45,"column":43,"nodeType":"342","messageId":"343","endLine":45,"endColumn":57},{"ruleId":"340","severity":1,"message":"376","line":45,"column":68,"nodeType":"342","messageId":"343","endLine":45,"endColumn":82},{"ruleId":"340","severity":1,"message":"377","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":24},{"ruleId":"340","severity":1,"message":"378","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":18},{"ruleId":"340","severity":1,"message":"360","line":1,"column":28,"nodeType":"342","messageId":"343","endLine":1,"endColumn":36},{"ruleId":"340","severity":1,"message":"367","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":14},{"ruleId":"340","severity":1,"message":"379","line":5,"column":60,"nodeType":"342","messageId":"343","endLine":5,"endColumn":72},{"ruleId":"340","severity":1,"message":"380","line":21,"column":20,"nodeType":"342","messageId":"343","endLine":21,"endColumn":31},{"ruleId":"340","severity":1,"message":"381","line":21,"column":42,"nodeType":"342","messageId":"343","endLine":21,"endColumn":55},{"ruleId":"340","severity":1,"message":"382","line":21,"column":57,"nodeType":"342","messageId":"343","endLine":21,"endColumn":65},{"ruleId":"340","severity":1,"message":"383","line":26,"column":22,"nodeType":"342","messageId":"343","endLine":26,"endColumn":35},{"ruleId":"340","severity":1,"message":"384","line":26,"column":44,"nodeType":"342","messageId":"343","endLine":26,"endColumn":55},{"ruleId":"340","severity":1,"message":"360","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"385","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":13},{"ruleId":"340","severity":1,"message":"386","line":6,"column":32,"nodeType":"342","messageId":"343","endLine":6,"endColumn":48},{"ruleId":"340","severity":1,"message":"368","line":3,"column":24,"nodeType":"342","messageId":"343","endLine":3,"endColumn":27},{"ruleId":"340","severity":1,"message":"369","line":3,"column":29,"nodeType":"342","messageId":"343","endLine":3,"endColumn":32},{"ruleId":"340","severity":1,"message":"387","line":6,"column":10,"nodeType":"342","messageId":"343","endLine":6,"endColumn":29},{"ruleId":"340","severity":1,"message":"367","line":2,"column":18,"nodeType":"342","messageId":"343","endLine":2,"endColumn":22},{"ruleId":"340","severity":1,"message":"360","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"388","line":1,"column":38,"nodeType":"342","messageId":"343","endLine":1,"endColumn":44},{"ruleId":"340","severity":1,"message":"389","line":21,"column":13,"nodeType":"342","messageId":"343","endLine":21,"endColumn":18},{"ruleId":"340","severity":1,"message":"390","line":21,"column":20,"nodeType":"342","messageId":"343","endLine":21,"endColumn":27},{"ruleId":"340","severity":1,"message":"391","line":24,"column":9,"nodeType":"342","messageId":"343","endLine":24,"endColumn":16},{"ruleId":"340","severity":1,"message":"392","line":14,"column":5,"nodeType":"342","messageId":"343","endLine":14,"endColumn":20},{"ruleId":"340","severity":1,"message":"393","line":23,"column":5,"nodeType":"342","messageId":"343","endLine":23,"endColumn":25},{"ruleId":"340","severity":1,"message":"394","line":28,"column":5,"nodeType":"342","messageId":"343","endLine":28,"endColumn":32},{"ruleId":"340","severity":1,"message":"395","line":122,"column":17,"nodeType":"342","messageId":"343","endLine":122,"endColumn":21},{"ruleId":"340","severity":1,"message":"395","line":469,"column":17,"nodeType":"342","messageId":"343","endLine":469,"endColumn":21},{"ruleId":"340","severity":1,"message":"396","line":5,"column":5,"nodeType":"342","messageId":"343","endLine":5,"endColumn":26},{"ruleId":"340","severity":1,"message":"387","line":27,"column":5,"nodeType":"342","messageId":"343","endLine":27,"endColumn":24},{"ruleId":"340","severity":1,"message":"395","line":206,"column":17,"nodeType":"342","messageId":"343","endLine":206,"endColumn":21},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'wishlistItemsFromStorage' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'cartItems' is assigned a value but never used.","'queryString' is defined but never used.","'USER_REGISTER_SUCCESS' is defined but never used.","'USER_ACTIVATE_SUCCESS' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"397","text":"398"},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",{"range":"399","text":"398"},"'useState' is defined but never used.","'Loader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["400"],"'Card' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'errorCategory' is assigned a value but never used.","'loadingCategory' is assigned a value but never used.","'errorInclude' is assigned a value but never used.","'loadingInclude' is assigned a value but never used.","'successInclude' is assigned a value but never used.","'getUserDetails' is defined but never used.","'Redirect' is defined but never used.","'editCategory' is defined but never used.","'errorCreate' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'category' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'axios' is defined but never used.","'categoryProducts' is defined but never used.","'CATEGORY_EDIT_RESET' is defined but never used.","'useRef' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'history' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'data' is assigned a value but never used.","'CATEGORY_CREATE_RESET' is defined but never used.",[676,676]," rel=\"noreferrer\"",[841,841],{"desc":"401","fix":"402"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"403","text":"404"},[1349,1367],"[success, history, order._id, dispatch]"]