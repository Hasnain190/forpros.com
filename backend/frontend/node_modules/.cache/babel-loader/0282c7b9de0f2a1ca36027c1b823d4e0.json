{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';import{Row,Col,Image,ListGroup,Button,Card,Form}from'react-bootstrap';import Loader from'../components/Loader';import Message from'../components/Message';import{addToWishlist,removeFromWishlist}from'../actions/wishlistActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WishlistScreen(_ref){var history=_ref.history,match=_ref.match;var productId=match.params.id;var dispatch=useDispatch();var wishlist=useSelector(function(state){return state.wishlist;});var wishlistItems=wishlist.wishlistItems;useEffect(function(){if(productId){dispatch(addToWishlist(productId));}console.log('id',productId);},[dispatch,productId]);var removeFromWishlistHandler=function removeFromWishlistHandler(id){dispatch(removeFromWishlist(id));};return/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{md:8,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Your Wishlist\"}),wishlistItems.length===0?/*#__PURE__*/_jsxs(Message,{variant:\"info\",children:[\"Your Wishlist is empty \",/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Go Back\"})]}):/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:wishlistItems.map(function(item){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:2,children:/*#__PURE__*/_jsx(Image,{src:item.image,alt:item.name,fluid:true,rounded:true})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(item.product),children:item.name})}),/*#__PURE__*/_jsxs(Col,{md:2,children:[item.price,\"/-PKR\"]}),/*#__PURE__*/_jsx(Col,{md:1,children:/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"light\",onClick:function onClick(){return removeFromWishlistHandler(item.product);},children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"})})})]})},item.product);})})]})});}export default WishlistScreen;","map":{"version":3,"sources":["E:/forpros.com/forpros.com/backend/frontend/src/screens/WishlistScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","Row","Col","Image","ListGroup","Button","Card","Form","Loader","Message","addToWishlist","removeFromWishlist","WishlistScreen","history","match","productId","params","id","dispatch","wishlist","state","wishlistItems","console","log","removeFromWishlistHandler","length","map","item","image","name","product","price"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,KAAnB,CAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,IAA7C,CAAmDC,IAAnD,KAA+D,iBAA/D,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,aAAT,CAAyBC,kBAAzB,KAAmD,4BAAnD,C,wFAEA,QAASC,CAAAA,cAAT,MAA6C,IAAnBC,CAAAA,OAAmB,MAAnBA,OAAmB,CAATC,KAAS,MAATA,KAAS,CACzC,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,MAAN,CAAaC,EAA/B,CAEA,GAAMC,CAAAA,QAAQ,CAAGpB,WAAW,EAA5B,CACA,GAAMqB,CAAAA,QAAQ,CAAGpB,WAAW,CAAC,SAAAqB,KAAK,QAAIA,CAAAA,KAAK,CAACD,QAAV,EAAN,CAA5B,CACA,GAAQE,CAAAA,aAAR,CAA0BF,QAA1B,CAAQE,aAAR,CACAxB,SAAS,CACL,UAAM,CACF,GAAIkB,SAAJ,CAAe,CAEXG,QAAQ,CAACR,aAAa,CAACK,SAAD,CAAd,CAAR,CACH,CACDO,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAiBR,SAAjB,EACH,CAPI,CAOF,CAACG,QAAD,CAAWH,SAAX,CAPE,CAAT,CASA,GAAMS,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACP,EAAD,CAAQ,CACtCC,QAAQ,CAACP,kBAAkB,CAACM,EAAD,CAAnB,CAAR,CACH,CAFD,CAIA,mBACI,KAAC,GAAD,wBACI,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,wBACI,qCADJ,CAEKI,aAAa,CAACI,MAAd,GAAyB,CAAzB,cACG,MAAC,OAAD,EAAS,OAAO,CAAC,MAAjB,kDAC2B,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,qBAD3B,GADH,cAKO,KAAC,SAAD,EAAW,OAAO,CAAC,OAAnB,UACKJ,aAAa,CAACK,GAAd,CAAkB,SAAAC,IAAI,qBACnB,KAAC,SAAD,CAAW,IAAX,wBACI,MAAC,GAAD,yBACI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACK,KAAC,KAAD,EAAO,GAAG,CAAEA,IAAI,CAACC,KAAjB,CAAwB,GAAG,CAAED,IAAI,CAACE,IAAlC,CAAwC,KAAK,KAA7C,CAA8C,OAAO,KAArD,EADL,EADJ,cAII,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,KAAC,IAAD,EAAM,EAAE,oBAAcF,IAAI,CAACG,OAAnB,CAAR,UAAuCH,IAAI,CAACE,IAA5C,EADJ,EAJJ,cAQI,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,WACKF,IAAI,CAACI,KADV,WARJ,cA8BI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,KAAC,MAAD,EACI,IAAI,CAAC,QADT,CAEI,OAAO,CAAC,OAFZ,CAGI,OAAO,CAAE,yBAAMP,CAAAA,yBAAyB,CAACG,IAAI,CAACG,OAAN,CAA/B,EAHb,uBAKI,UAAG,SAAS,CAAC,cAAb,EALJ,EADJ,EA9BJ,GADJ,EAAqBH,IAAI,CAACG,OAA1B,CADmB,EAAtB,CADL,EAPZ,GADJ,EADJ,CAmFH,CAED,cAAelB,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { addToWishlist , removeFromWishlist } from '../actions/wishlistActions'\r\n\r\nfunction WishlistScreen({ history , match }) {\r\n    const productId = match.params.id\r\n   \r\n    const dispatch = useDispatch()\r\n    const wishlist = useSelector(state => state.wishlist)\r\n    const { wishlistItems } = wishlist\r\n    useEffect(\r\n        () => {\r\n            if (productId) {\r\n             \r\n                dispatch(addToWishlist(productId))\r\n            }\r\n            console.log('id',productId)\r\n        }, [dispatch, productId]\r\n    )\r\n    const removeFromWishlistHandler = (id) => {\r\n        dispatch(removeFromWishlist(id))\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Your Wishlist</h1>\r\n                {wishlistItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your Wishlist is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {wishlistItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                             <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            {item.price}/-PKR\r\n                                        </Col>\r\n\r\n                                        {/* <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToWishlist(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col> */}\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromWishlistHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            {/* <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({wishlistItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${wishlistItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                    <Button\r\n                                                    onClick={addToCartHandler}\r\n\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock === 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col> */}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default WishlistScreen\r\n"]},"metadata":{},"sourceType":"module"}