{"ast":null,"code":"import _slicedToArray from\"E:/forpros.com/forpros.com/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Loader from'../components/Loader';import Message from'../components/Message';import FormContainer from'../components/FormContainer';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setAdmin=_useState6[1];var userId=match.params.id;var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var error=userDetails.error,loading=userDetails.loading,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var errorUpdate=userUpdate.error,loadingUpdate=userUpdate.loading,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==Number(userId)){dispatch(getUserDetails());}else{setName(user.name);setEmail(user.email);setAdmin(user.isAdmin);}}},[dispatch,user,userId,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:user._id,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});}export default UserEditScreen;","map":{"version":3,"sources":["E:/forpros.com/forpros.com/backend/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","match","history","name","setName","email","setEmail","isAdmin","setAdmin","userId","params","id","message","setMessage","dispatch","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUpdate","successUpdate","success","type","push","_id","Number","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails , updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setAdmin] = useState(false)\r\n    const userId = match.params.id\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error:errorUpdate, loading:loadingUpdate , success:successUpdate } = userUpdate\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [dispatch ,user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n        \r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen"]},"metadata":{},"sourceType":"module"}