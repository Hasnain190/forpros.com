[{"/home/hasnain/proshop_django/frontend/src/index.js":"1","/home/hasnain/proshop_django/frontend/src/store.js":"2","/home/hasnain/proshop_django/frontend/src/App.js":"3","/home/hasnain/proshop_django/frontend/src/reportWebVitals.js":"4","/home/hasnain/proshop_django/frontend/src/screens/HowToPayScreen.js":"5","/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/ContactUsScreen.js":"6","/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/AboutUsScreen.js":"7","/home/hasnain/proshop_django/frontend/src/reducers/productReducers.js":"8","/home/hasnain/proshop_django/frontend/src/reducers/userReducers.js":"9","/home/hasnain/proshop_django/frontend/src/reducers/cartReducers.js":"10","/home/hasnain/proshop_django/frontend/src/reducers/orderReducers.js":"11","/home/hasnain/proshop_django/frontend/src/components/Header.js":"12","/home/hasnain/proshop_django/frontend/src/components/Footer.js":"13","/home/hasnain/proshop_django/frontend/src/screens/HomeScreen.js":"14","/home/hasnain/proshop_django/frontend/src/screens/CartScreen.js":"15","/home/hasnain/proshop_django/frontend/src/screens/PaymentScreen.js":"16","/home/hasnain/proshop_django/frontend/src/screens/ProductScreen.js":"17","/home/hasnain/proshop_django/frontend/src/screens/PlaceOrderScreen.js":"18","/home/hasnain/proshop_django/frontend/src/screens/ShippingScreen.js":"19","/home/hasnain/proshop_django/frontend/src/screens/OrderScreen.js":"20","/home/hasnain/proshop_django/frontend/src/screens/ProfileScreen.js":"21","/home/hasnain/proshop_django/frontend/src/screens/OrderListScreen.js":"22","/home/hasnain/proshop_django/frontend/src/screens/UserListScreen.js":"23","/home/hasnain/proshop_django/frontend/src/screens/ProductListScreen.js":"24","/home/hasnain/proshop_django/frontend/src/screens/UserEditScreen.js":"25","/home/hasnain/proshop_django/frontend/src/reducers/wishlistReducers.js":"26","/home/hasnain/proshop_django/frontend/src/screens/ProductEditScreen.js":"27","/home/hasnain/proshop_django/frontend/src/screens/CategoricallyProductsScreen.js":"28","/home/hasnain/proshop_django/frontend/src/reducers/categoryReducers.js":"29","/home/hasnain/proshop_django/frontend/src/screens/AccountScreens/LoginScreen.js":"30","/home/hasnain/proshop_django/frontend/src/screens/CategoryEditScreen.js":"31","/home/hasnain/proshop_django/frontend/src/screens/AccountScreens/RegisterScreen.js":"32","/home/hasnain/proshop_django/frontend/src/screens/CategoryListScreen.js":"33","/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/PrivacyPolicyScreen.js":"34","/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/FAQScreen.js":"35","/home/hasnain/proshop_django/frontend/src/screens/WishlistScreen.js":"36","/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/TermsAndConditionsScreen.js":"37","/home/hasnain/proshop_django/frontend/src/components/SearchBox.js":"38","/home/hasnain/proshop_django/frontend/src/components/Sidebar.js":"39","/home/hasnain/proshop_django/frontend/src/components/Product.js":"40","/home/hasnain/proshop_django/frontend/src/components/Loader.js":"41","/home/hasnain/proshop_django/frontend/src/components/Message.js":"42","/home/hasnain/proshop_django/frontend/src/components/Paginate.js":"43","/home/hasnain/proshop_django/frontend/src/components/ProductCarousel.js":"44","/home/hasnain/proshop_django/frontend/src/components/FormContainer.js":"45","/home/hasnain/proshop_django/frontend/src/components/CheckoutSteps.js":"46","/home/hasnain/proshop_django/frontend/src/components/Rating.js":"47","/home/hasnain/proshop_django/frontend/src/constants/productConstants.js":"48","/home/hasnain/proshop_django/frontend/src/constants/orderConstants.js":"49","/home/hasnain/proshop_django/frontend/src/constants/userConstants.js":"50","/home/hasnain/proshop_django/frontend/src/constants/cartConstants.js":"51","/home/hasnain/proshop_django/frontend/src/constants/categoryConstants.js":"52","/home/hasnain/proshop_django/frontend/src/actions/productActions.js":"53","/home/hasnain/proshop_django/frontend/src/actions/userActions.js":"54","/home/hasnain/proshop_django/frontend/src/actions/cartActions.js":"55","/home/hasnain/proshop_django/frontend/src/actions/orderActions.js":"56","/home/hasnain/proshop_django/frontend/src/actions/categoryActions.js":"57","/home/hasnain/proshop_django/frontend/src/actions/wishlistActions.js":"58","/home/hasnain/proshop_django/frontend/src/constants/wishlistConstants.js":"59"},{"size":594,"mtime":1644963137381,"results":"60","hashOfConfig":"61"},{"size":3191,"mtime":1644997766002,"results":"62","hashOfConfig":"61"},{"size":3786,"mtime":1645014953894,"results":"63","hashOfConfig":"61"},{"size":362,"mtime":1644963137381,"results":"64","hashOfConfig":"61"},{"size":1357,"mtime":1645002877893,"results":"65","hashOfConfig":"61"},{"size":161,"mtime":1644993233334,"results":"66","hashOfConfig":"61"},{"size":19064,"mtime":1644993233334,"results":"67","hashOfConfig":"61"},{"size":4080,"mtime":1644963137381,"results":"68","hashOfConfig":"61"},{"size":3926,"mtime":1644963137381,"results":"69","hashOfConfig":"61"},{"size":1486,"mtime":1644963137381,"results":"70","hashOfConfig":"61"},{"size":4079,"mtime":1644963137381,"results":"71","hashOfConfig":"61"},{"size":5092,"mtime":1645001874917,"results":"72","hashOfConfig":"61"},{"size":3022,"mtime":1645002377806,"results":"73","hashOfConfig":"61"},{"size":1977,"mtime":1645002923954,"results":"74","hashOfConfig":"61"},{"size":4582,"mtime":1645002918146,"results":"75","hashOfConfig":"61"},{"size":2003,"mtime":1645002874341,"results":"76","hashOfConfig":"61"},{"size":14821,"mtime":1644996971235,"results":"77","hashOfConfig":"61"},{"size":6483,"mtime":1645002905818,"results":"78","hashOfConfig":"61"},{"size":3176,"mtime":1644963137381,"results":"79","hashOfConfig":"61"},{"size":8318,"mtime":1645007161441,"results":"80","hashOfConfig":"61"},{"size":6500,"mtime":1645002854949,"results":"81","hashOfConfig":"61"},{"size":3515,"mtime":1645002912334,"results":"82","hashOfConfig":"61"},{"size":3493,"mtime":1645002853701,"results":"83","hashOfConfig":"61"},{"size":4997,"mtime":1645002856949,"results":"84","hashOfConfig":"61"},{"size":3912,"mtime":1644963137381,"results":"85","hashOfConfig":"61"},{"size":1217,"mtime":1644992956934,"results":"86","hashOfConfig":"61"},{"size":13082,"mtime":1645010388402,"results":"87","hashOfConfig":"61"},{"size":2073,"mtime":1645003102825,"results":"88","hashOfConfig":"61"},{"size":3445,"mtime":1644992956970,"results":"89","hashOfConfig":"61"},{"size":2558,"mtime":1645002922014,"results":"90","hashOfConfig":"61"},{"size":2136,"mtime":1645009265543,"results":"91","hashOfConfig":"61"},{"size":3937,"mtime":1645002917074,"results":"92","hashOfConfig":"61"},{"size":3906,"mtime":1645009267399,"results":"93","hashOfConfig":"61"},{"size":7402,"mtime":1644993233334,"results":"94","hashOfConfig":"61"},{"size":8286,"mtime":1644993233334,"results":"95","hashOfConfig":"61"},{"size":4689,"mtime":1645002981119,"results":"96","hashOfConfig":"61"},{"size":10129,"mtime":1644993233338,"results":"97","hashOfConfig":"61"},{"size":1223,"mtime":1645002862821,"results":"98","hashOfConfig":"61"},{"size":1483,"mtime":1645003043200,"results":"99","hashOfConfig":"61"},{"size":1008,"mtime":1644963137381,"results":"100","hashOfConfig":"61"},{"size":458,"mtime":1644963137381,"results":"101","hashOfConfig":"61"},{"size":228,"mtime":1644963137381,"results":"102","hashOfConfig":"61"},{"size":859,"mtime":1644963137381,"results":"103","hashOfConfig":"61"},{"size":1788,"mtime":1644992535853,"results":"104","hashOfConfig":"61"},{"size":378,"mtime":1644963137381,"results":"105","hashOfConfig":"61"},{"size":1593,"mtime":1644963137381,"results":"106","hashOfConfig":"61"},{"size":1886,"mtime":1644963137381,"results":"107","hashOfConfig":"61"},{"size":1502,"mtime":1644963137381,"results":"108","hashOfConfig":"61"},{"size":1240,"mtime":1644963137381,"results":"109","hashOfConfig":"61"},{"size":1479,"mtime":1644963137381,"results":"110","hashOfConfig":"61"},{"size":287,"mtime":1644963137381,"results":"111","hashOfConfig":"61"},{"size":1301,"mtime":1644992766440,"results":"112","hashOfConfig":"61"},{"size":5931,"mtime":1644963137381,"results":"113","hashOfConfig":"61"},{"size":7370,"mtime":1644963137381,"results":"114","hashOfConfig":"61"},{"size":1310,"mtime":1644963137381,"results":"115","hashOfConfig":"61"},{"size":5930,"mtime":1645002185640,"results":"116","hashOfConfig":"61"},{"size":5261,"mtime":1645002146903,"results":"117","hashOfConfig":"61"},{"size":876,"mtime":1644965015748,"results":"118","hashOfConfig":"61"},{"size":173,"mtime":1644992774580,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h5015p",{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hasnain/proshop_django/frontend/src/index.js",[],"/home/hasnain/proshop_django/frontend/src/store.js",["254"],"/home/hasnain/proshop_django/frontend/src/App.js",[],"/home/hasnain/proshop_django/frontend/src/reportWebVitals.js",[],"/home/hasnain/proshop_django/frontend/src/screens/HowToPayScreen.js",[],["255","256"],"/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/ContactUsScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/AboutUsScreen.js",["257"],"import React from 'react'\n\nfunction AboutUsScreen() {\n    return (\n        <div>\n\n            {/* <!-- START THE INTRO SECTION  --> */}\n            <section id=\"home\" class=\"intro-section\">\n                <div class=\"container\">\n                    <div class=\"row align-items-center text-white\">\n                        {/* <!-- START THE CONTENT FOR THE INTRO  --> */}\n                        <div class=\"col-md-6 intros text-start\">\n                            <h1 class=\"display-2\">\n                                <span class=\"display-2--intro\">Hey!, I'm XXXX xxxxx</span>\n                                <span class=\"display-2--description lh-base\">the founder of (this website) . In which you can nuy Lorem ipsum dolor sit amet.</span>\n                            </h1>\n\n                            <button type=\"button\" class=\"rounded-pill btn-rounded\">\n                                Get in Touch\n\n                                <span><i class=\"fas fa-arrow-right\"></i></span>\n                            </button>\n                        </div>\n                        {/* <!-- START THE CONTENT FOR THE VIDEO      --> */}\n\n                        <div class=\"col-md-6 intros text-end\">\n                            <div class=\"video-box\">\n                                <img src=\"./assets/New folder/Coding _Monochromatic.png\" alt=\"Video illustration\"\n                                    class=\"img-fluid\" />\n                                <span class=\"shadow\">\n                                    <a href=\"#\" class=\"glightbox\">\n                                        <i class=\"fas fa-play-circle\"></i>\n                                        <span class=\"border-animation border-animation--border-1\"></span>\n\n                                        <span class=\"border-animation border-animation--border-2\"></span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                    <path fill=\"#ffff\" fill-opacity=\"1\"\n                        d=\"M0,192L40,176C80,160,160,128,240,96C320,64,400,32,480,26.7C560,21,640,43,720,90.7C800,139,880,213,960,208C1040,203,1120,117,1200,112C1280,107,1360,181,1400,218.7L1440,256L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z\">\n                    </path>\n                </svg>\n            </section>\n            {/* <!-- SERVICES SECTION --> */}\n            <section id=\"services\" class=\"services\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <h1 class=\"display-3 fw-bold text-center\">Our Services</h1>\n                        <div class=\"heading-line mb-1\"></div>\n                    </div>\n\n                    <div class=\"row pt-2 pb-2 mt-0 mb-3\">\n                        <div class=\"col-md-6 border-right\">\n                            <div class=\"bg-white p-3\">\n                                <h2 class=\"fw-bold text-center text-capitalize\">Lorem ipsum dolor sit amet consectetur\n                                    adipisicing elit. Perferendis, aspernatur.</h2>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"bg-white p-4\">\n                                <p class=\"fw-light text-start\">\n                                    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quis corporis nostrum dolorum,\n                                    vero facilis, consectetur incidunt, officiis culpa consequuntur ab ipsam quod dignissimos\n                                    vitae\n                                    ipsum at dolor accusantium odio consequatur.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"container\">\n                    {/* <!-- SERVICE-1 --> */}\n                    <div class=\"row\">\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4\">\n                            <div class=\"services__content\">\n                                <div class=\"icon d-block fas fa-paper-plane\"></div>\n                                <h3 class=\"display-3--title mt-1\">Front-end Web-development</h3>\n                                <p class=\"lh-lg\">\n                                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum, perspiciatis harum\n                                    iste nemo architecto, libero aperiam, corporis eos similique laudantium placeat corrupti\n                                    velit?\n                                    Consequuntur, quae!\n                                </p>\n                                <button type=\"button\" class=\"rounded-pill btn-rounded border-primary\">\n                                    Get in Touch\n\n                                    <span><i class=\"fas fa-arrow-right\"></i></span>\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4 text-end\">\n                            <div class=\"services__pic\">\n                                <img src=\"/images/services/Coding _Outline.png\" alt=\"service-1\" class=\"img-fluid\" />\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                        {/* <!-- SERVICE-2 --> */}\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4 text-end\">\n\n                            <div class=\"services__pic\">\n                                <img src=\"/images/services/HTML_Two Color.png\" alt=\"service-2\" class=\"img-fluid\" />\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4\">\n                            <div class=\"services__content\">\n                                <div class=\"icon d-block fas fa-paper-plane\"></div>\n                                <h3 class=\"display-3--title mt-1\">Full-Stack Web-development</h3>\n                                <p class=\"lh-lg\">\n                                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum, perspiciatis harum\n                                    iste nemo architecto, libero aperiam, corporis eos similique laudantium placeat corrupti\n                                    velit?\n                                    Consequuntur, quae!\n                                </p>\n                                <button type=\"button\" class=\"rounded-pill btn-rounded border-primary\">\n                                    Get in Touch\n\n                                    <span><i class=\"fas fa-arrow-right\"></i></span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        {/* <!-- SERVICE-3 --> */}\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4\">\n                            <div class=\"services__content\">\n                                <div class=\"icon d-block fas fa-paper-plane\"></div>\n                                <h3 class=\"display-3--title mt-1\">E-commerce web apps</h3>\n                                <p class=\"lh-lg\">\n                                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptatum, perspiciatis harum\n                                    iste nemo architecto, libero aperiam, corporis eos similique laudantium placeat corrupti\n                                    velit?\n                                    Consequuntur, quae!\n                                </p>\n                                <button type=\"button\" class=\"rounded-pill btn-rounded border-primary\">\n                                    Get in Touch\n\n                                    <span><i class=\"fas fa-arrow-right\"></i></span>\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xsm-12 services mt-4 text-end\">\n                            <div class=\"services__pic\">\n                                <img src=\"/images/services/Web Developer_Isometric.png\" alt=\"service-3\" class=\"img-fluid\" />\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            {/* <!-- START TESTIMONIAL SECTION --> */}\n            <section id=\"testimonials\" class=\"testimonials\">\n\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                    <path fill=\"#ffff\" fill-opacity=\"1\"\n                        d=\"M0,96L40,122.7C80,149,160,203,240,229.3C320,256,400,256,480,224C560,192,640,128,720,96C800,64,880,64,960,69.3C1040,75,1120,85,1200,85.3C1280,85,1360,75,1400,69.3L1440,64L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z\">\n                    </path>\n                </svg>\n                <div class=\"container\">\n                    <div class=\"row text-center text-white\">\n                        <h3 class=\"display-3 fw-bold\">Testimonials</h3>\n                        <hr style={{'height': '3px', 'width':'100%'}} />\n                        <div class=\"lead pt-3\">\n                            what our clients say?\n                        </div>\n                    </div>\n\n                    {/* <!-- CAROUSEL CONTENT --> */}\n                    <div class=\"row align-items-center\">\n                        <div id=\"carouselExampleCaptions\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n\n                            <div class=\"carousel-inner\">\n\n                                {/* <!-- CAROUSEL-1   --> */}\n                                <div class=\"carousel-item active\">\n                                    {/* <!-- testimonials card --> */}\n                                    <div class=\"testimonials__card\">\n                                        <div class=\"lh-lg\">\n\n                                            <i class=\"fas fa-quote-left\"></i>\n                                            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cumque nesciunt\n                                            repudiandae velit\n                                            dicta doloremque esse omnis dignissimos, nostrum fugit ullam magni!\n                                            <i class=\"fas fa-quote-right\"></i>\n                                        </div>\n                                    </div>\n                                    {/* <!-- client name & role --> */}\n                                    <div class=\"testimonials__name\">\n                                        <h3>Discoed</h3>\n\n                                    </div>\n\n                                </div>\n\n                                {/* <!-- CAROUSEL-2   --> */}\n                                <div class=\"carousel-item \">\n                                    {/* <!-- testimonials card --> */}\n                                    <div class=\"testimonials__card\">\n                                        <div class=\"lh-lg\">\n\n                                            <i class=\"fas fa-quote-left\"></i>\n                                            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cumque nesciunt\n                                            repudiandae velit\n                                            dicta doloremque esse omnis dignissimos, nostrum fugit ullam magni!\n                                            <i class=\"fas fa-quote-right\"></i>\n                                        </div>\n                                    </div>\n                                    {/* <!-- client name & role --> */}\n                                    <div class=\"testimonials__name\">\n                                        <h3>Newton</h3>\n\n                                    </div>\n\n                                </div>\n\n                                {/* <!-- CAROUSEL-3  --> */}\n                                <div class=\"carousel-item \">\n                                    {/* <!-- testimonials card --> */}\n                                    <div class=\"testimonials__card\">\n                                        <div class=\"lh-lg\">\n\n                                            <i class=\"fas fa-quote-left\"></i>\n                                            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cumque nesciunt\n                                            repudiandae velit\n                                            dicta doloremque esse omnis dignissimos, nostrum fugit ullam magni!\n                                            <i class=\"fas fa-quote-right\"></i>\n                                        </div>\n                                    </div>\n                                    {/* <!-- client name & role --> */}\n                                    <div class=\"testimonials__name\">\n                                        <h3>Einstien</h3>\n\n                                    </div>\n\n                                </div>\n\n                            </div>\n                            <div class=\"text-center\">\n                                <button class=\"btn btn-outline-light fas fa-long-arrow-alt-left\" type=\"button\"\n                                    data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"prev\">\n\n                                </button>\n                                <button class=\"btn btn-outline-light fas fa-long-arrow-alt-right\" type=\"button\"\n                                    data-bs-target=\"#carouselExampleCaptions\" data-bs-slide=\"next\">\n\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                    <path fill=\"#ffff\" fill-opacity=\"1\"\n                        d=\"M0,96L40,122.7C80,149,160,203,240,229.3C320,256,400,256,480,224C560,192,640,128,720,96C800,64,880,64,960,69.3C1040,75,1120,85,1200,85.3C1280,85,1360,75,1400,69.3L1440,64L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z\">\n                    </path>\n                </svg>\n            </section>\n\n\n            {/* <!-- /////////////////////////////////////////////////////////////////////////////////////////////////////////\n                START SECTION 8 - GET STARTED  \n                /////////////////////////////////////////////////////////////////////////////////////////////////////////--> */}\n            <section id=\"contact\" class=\"get-started\">\n                <div class=\"container\">\n                    <div class=\"row text-center\">\n                        <h1 class=\"display-3 fw-bold text-capitalize\">Get started</h1>\n                        <div class=\"heading-line\"></div>\n                        <p class=\"lh-lg\">\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Libero illum architecto modi.\n                        </p>\n                    </div>\n\n                    {/*  START THE CTA CONTENT */}\n                    <div class=\"row text-white\">\n                        <div class=\"col-12 col-lg-6 gradient shadow p-3\">\n                            <div class=\"cta-info w-100\">\n                                <h4 class=\"display-4 fw-bold\">100% Satisfaction Guaranteed</h4>\n                                <p class=\"lh-lg\">\n                                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Aperiam alias optio minima, tempore architecto\n                                    sint ipsam dolore tempora facere laboriosam corrupti!\n                                </p>\n                                <h3 class=\"display-3--brief\">What will be the next step?</h3>\n                                <ul class=\"cta-info__list\">\n                                    <li>We'll prepare the proposal.</li>\n                                    <li>we'll discuss it together.</li>\n                                    <li>let's start the discussion.</li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-lg-6 bg-white shadow p-3\">\n                            <div class=\"form w-100 pb-2\">\n                                <h4 class=\"display-3--title mb-5\">start your project</h4>\n                                <form action=\"#\" class=\"row\">\n                                    <div class=\"col-lg-6 col-md mb-3\">\n                                        <input type=\"text\" placeholder=\"First Name\" id=\"inputFirstName\"\n                                            class=\"shadow form-control form-control-lg\" />\n                                    </div>\n                                    <div class=\"col-lg-6 col-md mb-3\">\n                                        <input type=\"text\" placeholder=\"Last Name\" id=\"inputLastName\"\n                                            class=\"shadow form-control form-control-lg\" />\n                                    </div>\n                                    <div class=\"col-lg-12 mb-3\">\n                                        <input type=\"email\" placeholder=\"email address\" id=\"inputEmail\"\n                                            class=\"shadow form-control form-control-lg\" />\n                                    </div>\n                                    <div class=\"col-lg-12 mb-3\">\n                                        <textarea name=\"message\" placeholder=\"message\" id=\"message\" rows=\"8\"\n                                            class=\"shadow form-control form-control-lg\"></textarea>\n                                    </div>\n                                    <div class=\"text-center d-grid mt-1\">\n                                        <button type=\"button\" class=\"btn btn-primary rounded-pill pt-3 pb-3\">\n                                            submit\n                                            <i class=\"fas fa-paper-plane\"></i>\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n                  \n                    )\n}\n\nexport default AboutUsScreen\n","/home/hasnain/proshop_django/frontend/src/reducers/productReducers.js",[],"/home/hasnain/proshop_django/frontend/src/reducers/userReducers.js",[],"/home/hasnain/proshop_django/frontend/src/reducers/cartReducers.js",[],"/home/hasnain/proshop_django/frontend/src/reducers/orderReducers.js",[],"/home/hasnain/proshop_django/frontend/src/components/Header.js",[],"/home/hasnain/proshop_django/frontend/src/components/Footer.js",["258","259"],"import React from 'react'\nimport './Footer.css'\nimport { Link } from 'react-router-dom'\n\n\nfunction Footer() {\n    return (\n        <footer >\n            <div className=\"container\">\n                <div className=\"sec about-us\">\n                    <h2>About Us</h2>\n                    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Laudantium ut iste laboriosam dolore deleniti sit, nobis assumenda aspernatur voluptates. Eum, veritatis? Exercitationem pariatur nisi quos aperiam a fugiat recusandae suscipit.</p>\n                    <ul className='sci'>\n                        <li><a href=\"https://www.facebook.com/itsUsamaAshfaq\" rel=\"noreferrer\" target='_blank'><i className=\"fab fa-facebook-square\" aria-hidden='true'></i></a></li>\n                        <li><a href=\"https://www.instagram.com/usamaashfaq6364/\" rel=\"noreferrer\" target='_blank' ><i className=\"fab fa-instagram\" aria-hidden='true'></i></a></li>\n\n                    </ul>\n\n                </div>\n                <div className=\"sec quick-links\">\n                    <h2>Quick Links</h2>\n                    <ul>\n                        <li><Link to=\"/about-us\">\n\n                            About\n\n\n\n                        </Link></li>\n                        <li><Link to=\"faqs\">\n\n                            FAQs\n\n\n                        </Link> </li>\n                        <li><Link to=\"/privacy-policy\">\n\n\n                            Privacy Policy\n\n\n                        </Link> </li>\n\n                        <li><Link to=\"/terms-and-conditions\">\n\n                            Terms & Condition\n\n\n                        </Link> </li>\n                        <li><Link to=\"/contact-us\">\n\n                            Contact\n\n                        </Link> </li>\n                    </ul>\n\n                </div>\n                <div className=\"sec contact\">\n                    <h2>Contact Info</h2>\n\n                    <ul className=\"info\">\n                        {/* <li>\n                            <span><i className=\"fas fa-map-marker-alt\"></i></span>\n                            <span><a href=\"https://goo.gl/maps/9C5xdh5W1XVihmb48\" target='_blank' rel=\"noreferrer\"> D-XXX , Thermal Power Station <br />Muzzaffargarh 34200 <br />Pakistan</a></span>\n                        </li> */}\n                        <li>\n                            <span><i className=\"fas fa-phone-alt\"></i></span>\n                            <p><a href=\"tel:923174373258\">+92 311 7907036</a></p>\n                        </li>\n                        <li>\n                            <span><i className=\"far fa-envelope\"></i></span>\n                            <p><a href=\"mailto:s20755753@gmail.com\">s20755753@gmail.com</a></p>\n                        </li>\n\n\n                    </ul>\n\n                </div>\n\n\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n            <div className=\"copyright text-center py-3\">\n                copyright &copy; UsamaComputers All rights reserved\n\n            </div>\n\n\n        </footer>\n    )\n}\n\nexport default Footer\n","/home/hasnain/proshop_django/frontend/src/screens/HomeScreen.js",["260"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n    const searchTerm = keyword.split('=')[1]\n    const searchResults = Number(products.length)\n\n    return (\n        <div>\n            {message && (<Message variant='success'>{message}</Message>)}\n            {!keyword && <ProductCarousel />}\n            {(!keyword && (<h1>Latest Products</h1>)) || (\n                <>\n\n                    <h2>Search Result for</h2><p>\"{searchTerm}\"</p>\n                    <p>{searchResults} products were found</p>\n                </>\n            )}\n\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","/home/hasnain/proshop_django/frontend/src/screens/CartScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/PaymentScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/ProductScreen.js",["261"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    const [qty, setQty] = useState(1)\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productMedia = useSelector(state => state.productDetails.product.media)\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n\n    const dispatch = useDispatch()\n    const imageRef = useRef(null)\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n    const addToWishlistHandler = () => {\n        history.push(`/wishlist/${match.params.id}`)\n    }\n\n    useEffect(() => {\n        if (successProductReview) {\n            setComment('')\n            setRating(0)\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n        dispatch(listProductDetails(match.params.id))\n\n\n    }, [dispatch, match, successProductReview]\n    )\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n\n    const mediaChangeHandler = (src) => {\n        imageRef.current.src = src\n    }\n    const [position, setPosition] = useState({ backgroundPosition: '0% 0%' })\n\n\n    const handleMouseMove = e => {\n        const { left, top, width, height } = e.target.getBoundingClientRect()\n        const x = (e.pageX - left) / width * 100\n        const y = (e.pageY - top) / height * 100\n        setPosition({ backgroundPosition: `${x}% ${y}%` })\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n\n            {loading ? <Loader />\n                : error ? <Message variant=\"danger\">{error}</Message>\n                    : (\n                        <div>\n                            <Row  >\n\n                                <Col md={6}>\n                                    <figure onMouseMove={handleMouseMove} style={position}>\n\n                                        <Image src={product.image} alt={product.name} ref={imageRef} fluid />\n                                    </figure>\n                                    <Row md={3} className=\"container-fluid\">\n                                        {productMedia &&\n                                            <ListGroup variant=\"flush\">\n                                                {\n                                                    productMedia[0]?.image3 && <ListGroup.Item >\n\n                                                        <Image src={productMedia[0].image3} alt={productMedia[0].image3} onClick={(e) => { mediaChangeHandler(e.target.src) }} fluid />\n\n                                                    </ListGroup.Item>\n                                                }\n\n                                                {\n                                                    productMedia[0]?.image4 && <ListGroup.Item >\n\n                                                        <Image src={productMedia[0].image4} alt={productMedia[0].image5} onClick={(e) => { mediaChangeHandler(e.target.src) }} fluid />\n\n                                                    </ListGroup.Item>\n                                                }\n                                                {\n                                                    productMedia[0]?.image5 && <ListGroup.Item >\n\n                                                        <Image src={productMedia[0].image5} alt={productMedia[0].image5} onClick={(e) => { mediaChangeHandler(e.target.src) }} fluid />\n\n                                                    </ListGroup.Item>\n                                                }\n\n\n                                            </ListGroup>\n                                        }\n                                    </Row>\n\n                                </Col>\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: {product.price}{\" \"}/-PKR\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>{product.price}{\" \"} /-PKR</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <>\n                                                    <Button\n                                                        onClick={addToCartHandler}\n\n                                                        className='btn-block'\n                                                        disabled={product.countInStock === 0}\n                                                        type='button'>\n                                                        Add to Cart\n                                                    </Button>\n                                                    <p></p>\n                                                    <Button\n                                                        onClick={addToWishlistHandler}\n\n                                                        className='btn-block'\n                                                        disabled={product.countInStock === 0}\n                                                        type='button'>\n                                                        Add to Wishlist\n                                                    </Button>\n\n                                                </>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n\n\n                            </Row>\n                            <Row >\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                            )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n\n                                </Col>\n\n                            </Row>\n                        </div>\n\n\n\n\n                    )\n\n\n\n\n            }\n        </div>\n    )\n}\n\nexport default ProductScreen\n","/home/hasnain/proshop_django/frontend/src/screens/PlaceOrderScreen.js",["262"],"import React, { useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history,])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","/home/hasnain/proshop_django/frontend/src/screens/ShippingScreen.js",["263"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","/home/hasnain/proshop_django/frontend/src/screens/OrderScreen.js",["264","265"],"import React, { useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const orderPaid = useSelector(state => state.orderPay)\n    const { loading: loadingPaid, success: successPaid } = orderPaid\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo])\n\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n    const payHandler = () => {\n        dispatch(payOrder(order._id))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <div>\n            <h1>Order: {order.Id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong> {order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                            <p>\n                                <strong>Shipping: </strong>\n                                {order.shippingAddress.address},  {order.shippingAddress.city}\n                                {'  '}\n                                {order.shippingAddress.postalCode},\n                                {'  '}\n                                {order.shippingAddress.country}\n                            </p>\n\n                            {order.isDelivered ? (\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                            ) : (\n                                <Message variant='warning'>Not Delivered</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\n                            ) : (\n                                <>\n\n\n\n                                    <Message variant='warning'>Not Paid</Message>\n                                    <Link to='/how-to-pay'>how to pay</Link>\n\n\n                                </>\n                            )}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? <Message variant='info'>\n                                Order is empty\n                            </Message> : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} X {item.price}{\" \"}/-Pkr = {(item.qty * item.price).toFixed(2)}{\" \"}/-pkr\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n\n                        </ListGroup>\n                        {loadingPaid && <Loader />}\n                        {userInfo && userInfo.isAdmin && !order.isPaid && (\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn btn-block'\n                                    onClick={payHandler}\n                                >\n                                    Mark As Paid\n                                </Button>\n                            </ListGroup.Item>\n                        )}\n\n                        {loadingDeliver && <Loader />}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn btn-block'\n                                    onClick={deliverHandler}\n                                >\n                                    Mark As Delivered\n                                </Button>\n                            </ListGroup.Item>\n                        )}\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default OrderScreen\n","/home/hasnain/proshop_django/frontend/src/screens/ProfileScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/OrderListScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/UserListScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/ProductListScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/UserEditScreen.js",["266"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/home/hasnain/proshop_django/frontend/src/reducers/wishlistReducers.js",[],"/home/hasnain/proshop_django/frontend/src/screens/ProductEditScreen.js",["267","268","269","270","271"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { categoryProducts, includeCategory } from '../actions/categoryActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport axios from 'axios'\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [bannerImage, setBannerImage] = useState('')\n    const [image3, setImage3] = useState('')\n    const [image4, setImage4] = useState('')\n    const [image5, setImage5] = useState('')\n\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [Featured, setFeatured] = useState(false)\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n    const productCategory = useSelector(state => state.productCategory)\n    const { error: errorCategory, loading: loadingCategory, products: productsCategory } = productCategory\n\n    const categoryInclude = useSelector(state => state.categoryInclude)\n    const { error: errorInclude, loading: loadingInclude, success: successInclude } = categoryInclude\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n                dispatch(categoryProducts())\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBannerImage(product?.media?.bannerImage)\n                setImage3(product?.media?.image3)\n                setImage4(product?.media?.image4)\n                setImage5(product?.media?.image5)\n                setBrand(product.brand)\n                setFeatured(product.Featured)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image, bannerImage, image3, image4, image5,\n            Featured,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n\n    }\n\n    const includeCategoryHandler = async (categoryId, productId) => {\n        dispatch(includeCategory(categoryId, productId))\n        setCategory(product.category)\n\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n    return (\n        <div>\n            <Link to='/admin/productlist/'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Main Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label=''\n                                    // custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image - 2 </Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image3}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label=''\n                                    // custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image - 3</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image4}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label=''\n                                    // custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n                            <br />\n                            <Form.Group controlId='Featured'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Add to Featured'\n                                    checked={Featured}\n                                    onChange={(e) => setFeatured(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <br />\n                            {Featured &&\n\n                                <Form.Group controlId='image'>\n                                    <Form.Label>Banner Image</Form.Label>\n                                    <Form.Control\n\n                                        type='text'\n                                        placeholder='Enter banner Image'\n                                        value={bannerImage}\n                                        onChange={(e) => setImage(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                    <Form.File\n                                        id='image-file'\n                                        label=''\n                                        // custom\n                                        onChange={uploadFileHandler}\n                                    >\n\n                                    </Form.File>\n                                    {uploading && <Loader />}\n\n                                </Form.Group>\n                            }\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n\n\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n\n\n                                <Form.Control\n                                    as='select'\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={product.category}\n                                    onChange={(e) => includeCategoryHandler(e.target.value, productId)}\n                                >\n                                    {productsCategory.map(product => {\n                                        return (\n                                            <option key={product.id} value={product.id}> {product.product_category}\n\n\n                                            </option>\n\n                                        );\n                                    })}\n\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                            </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","/home/hasnain/proshop_django/frontend/src/screens/CategoricallyProductsScreen.js",["272"],"import React, { useState, useEffect } from 'react'\n\n\nimport { Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { categoryListProducts } from '../actions/categoryActions'\n\n\n\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\n\nfunction CategoricallyProductsScreen({ match }) {\n    const categoryId = match.params.id\n\n    const dispatch = useDispatch()\n    const productCategoryList = useSelector(state => state.productCategoryList)\n    const { error, loading, products } = productCategoryList\n\n\n\n    const productCategory = useSelector(state => state.productCategory)\n    const { error: errorCategory, loading: loadingCategory, products: productsCategory } = productCategory\n    const x = productsCategory.find(e => {\n        return e.id === Number(categoryId)\n    })\n\n    let y = x.product_category\n\n    useEffect(() => {\n\n        // dispatch(categoryProducts())\n        dispatch(categoryListProducts(categoryId))\n        console.log(productsCategory)\n        console.log(categoryId)\n        console.log(x.product_category)\n\n    }, [dispatch, productsCategory, categoryId, x]\n    )\n\n    return (\n        <div>\n            <>\n                {loadingCategory ? (<Loader />)\n                    : errorCategory ? (<Message variant='danger'>{error}</Message>)\n                        :\n\n                        (<h1>\n                            {y}\n                        </h1>)\n\n                }\n\n            </>\n\n\n\n\n            {loading ? (<Loader />)\n                : error ? (<Message variant='danger'>{error}</Message>)\n                    : <Row>\n\n                        {products.map(product => (\n\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product} />\n\n                            </Col>\n                        )\n                        )}\n\n                    </Row>\n            }\n        </div>\n    )\n}\n\nexport default CategoricallyProductsScreen\n","/home/hasnain/proshop_django/frontend/src/reducers/categoryReducers.js",[],"/home/hasnain/proshop_django/frontend/src/screens/AccountScreens/LoginScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/CategoryEditScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/AccountScreens/RegisterScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/CategoryListScreen.js",["273","274","275","276","277"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Table, Row, Col } from 'react-bootstrap'\n\nimport { categoryProducts, deleteCategory, createCategory } from '../actions/categoryActions'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nfunction CategoryScreen() {\n\n\n    const dispatch = useDispatch()\n\n    const productCategory = useSelector(state => state.productCategory)\n    const { error, loading, products } = productCategory\n\n    const categoryCreate = useSelector(state => state.categoryCreate)\n    const { error: errorCreate, loading: loadingCreate, category, success: successCreate } = categoryCreate\n\n\n\n    const categoryDelete = useSelector(state => state.categoryDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = categoryDelete\n\n    useEffect(() => {\n\n\n        dispatch(categoryProducts())\n\n\n\n    }, [dispatch, successDelete, successCreate])\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this category? It will remove all related products from it')) {\n            dispatch(deleteCategory(id))\n        }\n    }\n\n\n    const createCategoryHandler = () => {\n        dispatch(createCategory())\n        // console.log('some things')\n    }\n\n\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Categories</h1>\n                </Col>\n\n\n            </Row>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th >NAME</th>\n\n\n                                    <th >edit button</th>\n                                    <th >delete</th>\n\n\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {products.map(product => (\n                                    <tr key={product.id}>\n                                        <td>{product.id}</td>\n\n                                        <td  >\n                                            {product.product_category}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/categorylist/${product.id}/edit`}>\n\n                                                <Button variant='light' className='btn-sm' >\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                        </td>\n                                        <td>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product.id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n\n                                    </tr>\n                                ))}\n                                <Button className='my-3' onClick={createCategoryHandler}>\n                                    <i className='fas fa-plus'></i> Create A New Category\n                                </Button>\n\n                            </tbody>\n                        </Table>\n\n\n\n\n\n                    )\n\n\n\n\n\n            }\n\n\n        </div>\n    )\n}\n\nexport default CategoryScreen\n","/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/PrivacyPolicyScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/FAQScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/WishlistScreen.js",[],"/home/hasnain/proshop_django/frontend/src/screens/BlogScreens/TermsAndConditionsScreen.js",[],"/home/hasnain/proshop_django/frontend/src/components/SearchBox.js",[],"/home/hasnain/proshop_django/frontend/src/components/Sidebar.js",["278","279","280","281"],"import React, { useState, useEffect } from 'react'\nimport './Sidebar.css'\nimport { useHistory } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { categoryProducts } from '../actions/categoryActions'\n\nimport { Link } from 'react-router-dom';\n\n\nfunction Sidebar({ sidebar }) {\n\n\n\n    const dispatch = useDispatch()\n\n    const productCategory = useSelector(state => state.productCategory)\n    const { error, loading, products } = productCategory\n\n\n    let history = useHistory()\n\n\n\n    useEffect(() => {\n        dispatch(categoryProducts())\n\n\n    }, [dispatch])\n\n\n    return (\n        <>\n\n\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n                <ul className='nav-menu-items' onClick={!sidebar}>\n                    <li className='navbar-toggle'>\n                        <Link to='#' className='menu-bars'>\n                            Categories\n                        </Link>\n                    </li>\n                    {products.map(product => {\n                        return (\n                            <li key={product.id} className='nav-text'>\n                                <Link to={`/category/${product.id}`}>\n\n                                    <span> {product.product_category}</span>\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </nav>\n\n        </>\n    )\n}\n\nexport default Sidebar\n","/home/hasnain/proshop_django/frontend/src/components/Product.js",[],"/home/hasnain/proshop_django/frontend/src/components/Loader.js",[],"/home/hasnain/proshop_django/frontend/src/components/Message.js",[],"/home/hasnain/proshop_django/frontend/src/components/Paginate.js",[],"/home/hasnain/proshop_django/frontend/src/components/ProductCarousel.js",[],"/home/hasnain/proshop_django/frontend/src/components/FormContainer.js",[],"/home/hasnain/proshop_django/frontend/src/components/CheckoutSteps.js",[],"/home/hasnain/proshop_django/frontend/src/components/Rating.js",[],"/home/hasnain/proshop_django/frontend/src/constants/productConstants.js",[],"/home/hasnain/proshop_django/frontend/src/constants/orderConstants.js",[],"/home/hasnain/proshop_django/frontend/src/constants/userConstants.js",[],"/home/hasnain/proshop_django/frontend/src/constants/cartConstants.js",[],"/home/hasnain/proshop_django/frontend/src/constants/categoryConstants.js",[],"/home/hasnain/proshop_django/frontend/src/actions/productActions.js",["282"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/hasnain/proshop_django/frontend/src/actions/userActions.js",["283"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","/home/hasnain/proshop_django/frontend/src/actions/cartActions.js",[],"/home/hasnain/proshop_django/frontend/src/actions/orderActions.js",[],"/home/hasnain/proshop_django/frontend/src/actions/categoryActions.js",["284"],"import {\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n\n\n    PRODUCT_CATEGORY_REQUEST,\n    PRODUCT_CATEGORY_SUCCESS,\n    PRODUCT_CATEGORY_FAIL,\n\n\n    PRODUCT_CATEGORY_LIST_REQUEST,\n    PRODUCT_CATEGORY_LIST_SUCCESS,\n    PRODUCT_CATEGORY_LIST_FAIL,\n\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n\n    CATEGORY_INCLUDE_REQUEST,\n    CATEGORY_INCLUDE_SUCCESS,\n    CATEGORY_INCLUDE_FAIL,\n\n    CATEGORY_EDIT_REQUEST,\n    CATEGORY_EDIT_SUCCESS,\n    CATEGORY_EDIT_FAIL,\n\n\n} from '../constants/categoryConstants'\nimport axios from 'axios'\n\n\n\nexport const createCategory = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/category/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: CATEGORY_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const editCategory = (product_category, id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_EDIT_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/category/${id}/edit/`,\n            product_category,\n            config\n        )\n        dispatch({\n            type: CATEGORY_EDIT_SUCCESS,\n            payload: data,\n        })\n\n        // dispatch({\n        //     type: PRODUCT_DETAILS_SUCCESS,\n        //     payload: data,\n        // })\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_EDIT_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const includeCategory = (categoryId, productId) => async (dispatch) => {\n    try {\n        dispatch({ type: CATEGORY_INCLUDE_REQUEST })\n\n\n        const formDataForCat = new FormData()\n        formDataForCat.append('product_id', productId)\n\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n        const { data } = await axios.put(`/api/category/update/${categoryId}/`, formDataForCat, config)\n\n        console.log(data)\n        dispatch({\n            type: CATEGORY_INCLUDE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_INCLUDE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const categoryProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_CATEGORY_REQUEST })\n\n        const { data } = await axios.get(`/api/category/categorylist/`)\n\n        dispatch({\n            type: PRODUCT_CATEGORY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CATEGORY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const categoryListProducts = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_CATEGORY_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/category/${id}/`)\n\n        dispatch({\n            type: PRODUCT_CATEGORY_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CATEGORY_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CATEGORY_DELETE_REQUEST })\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `JWT ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.delete(`/api/category/delete/${id}/`, config)\n\n        dispatch({\n            type: CATEGORY_DELETE_SUCCESS,\n\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n","/home/hasnain/proshop_django/frontend/src/actions/wishlistActions.js",[],"/home/hasnain/proshop_django/frontend/src/constants/wishlistConstants.js",[],{"ruleId":"285","severity":1,"message":"286","line":94,"column":7,"nodeType":"287","messageId":"288","endLine":94,"endColumn":31},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":31,"column":37,"nodeType":"295","endLine":31,"endColumn":67},{"ruleId":"296","severity":1,"message":"297","line":14,"column":29,"nodeType":"295","endLine":14,"endColumn":112},{"ruleId":"296","severity":1,"message":"297","line":15,"column":29,"nodeType":"295","endLine":15,"endColumn":116},{"ruleId":"285","severity":1,"message":"298","line":18,"column":21,"nodeType":"287","messageId":"288","endLine":18,"endColumn":31},{"ruleId":"285","severity":1,"message":"299","line":23,"column":13,"nodeType":"287","messageId":"288","endLine":23,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":35,"column":8,"nodeType":"302","endLine":35,"endColumn":27,"suggestions":"303"},{"ruleId":"285","severity":1,"message":"304","line":1,"column":27,"nodeType":"287","messageId":"288","endLine":1,"endColumn":36},{"ruleId":"285","severity":1,"message":"305","line":20,"column":22,"nodeType":"287","messageId":"288","endLine":20,"endColumn":32},{"ruleId":"285","severity":1,"message":"306","line":35,"column":44,"nodeType":"287","messageId":"288","endLine":35,"endColumn":55},{"ruleId":"300","severity":1,"message":"307","line":43,"column":8,"nodeType":"302","endLine":43,"endColumn":46,"suggestions":"308"},{"ruleId":"285","severity":1,"message":"309","line":42,"column":20,"nodeType":"287","messageId":"288","endLine":42,"endColumn":33},{"ruleId":"285","severity":1,"message":"310","line":42,"column":44,"nodeType":"287","messageId":"288","endLine":42,"endColumn":59},{"ruleId":"285","severity":1,"message":"311","line":45,"column":20,"nodeType":"287","messageId":"288","endLine":45,"endColumn":32},{"ruleId":"285","severity":1,"message":"312","line":45,"column":43,"nodeType":"287","messageId":"288","endLine":45,"endColumn":57},{"ruleId":"285","severity":1,"message":"313","line":45,"column":68,"nodeType":"287","messageId":"288","endLine":45,"endColumn":82},{"ruleId":"285","severity":1,"message":"314","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"315","line":21,"column":20,"nodeType":"287","messageId":"288","endLine":21,"endColumn":31},{"ruleId":"285","severity":1,"message":"316","line":21,"column":42,"nodeType":"287","messageId":"288","endLine":21,"endColumn":55},{"ruleId":"285","severity":1,"message":"317","line":21,"column":57,"nodeType":"287","messageId":"288","endLine":21,"endColumn":65},{"ruleId":"285","severity":1,"message":"318","line":26,"column":22,"nodeType":"287","messageId":"288","endLine":26,"endColumn":35},{"ruleId":"285","severity":1,"message":"319","line":26,"column":44,"nodeType":"287","messageId":"288","endLine":26,"endColumn":55},{"ruleId":"285","severity":1,"message":"314","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"320","line":18,"column":13,"nodeType":"287","messageId":"288","endLine":18,"endColumn":18},{"ruleId":"285","severity":1,"message":"321","line":18,"column":20,"nodeType":"287","messageId":"288","endLine":18,"endColumn":27},{"ruleId":"285","severity":1,"message":"322","line":21,"column":9,"nodeType":"287","messageId":"288","endLine":21,"endColumn":16},{"ruleId":"285","severity":1,"message":"323","line":117,"column":17,"nodeType":"287","messageId":"288","endLine":117,"endColumn":21},{"ruleId":"285","severity":1,"message":"324","line":21,"column":5,"nodeType":"287","messageId":"288","endLine":21,"endColumn":30},{"ruleId":"285","severity":1,"message":"323","line":206,"column":17,"nodeType":"287","messageId":"288","endLine":206,"endColumn":21},"no-unused-vars","'wishlistItemsFromStorage' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["325"],"no-negated-in-lhs",["326"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'setMessage' is assigned a value but never used.","'cartItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["327"],"'useEffect' is defined but never used.","'loadingPay' is assigned a value but never used.","'successPaid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["328"],"'errorCategory' is assigned a value but never used.","'loadingCategory' is assigned a value but never used.","'errorInclude' is assigned a value but never used.","'loadingInclude' is assigned a value but never used.","'successInclude' is assigned a value but never used.","'useState' is defined but never used.","'errorCreate' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'category' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'history' is assigned a value but never used.","'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"333","text":"334"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"335","text":"336"},[1258,1277],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]"]